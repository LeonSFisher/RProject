######################################################################################################################################################
######################################################################################################################################################

#FAMÍLIA APPLY()

######################################################################################################################################################
######################################################################################################################################################

#-----------------------------------------------------------------------------------------------------------------------------------------------------
#/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#apply()

#Retorna um vetor, ou array ou lista de valores obtidos aplicando uma função às margens de um array ou matriz
#Aplicar a função às linhas

  apply(mtcars[1:5, c(3, 5, 6, 7)], 1, FUN = sum)

#Aplicar a função às colunas

  apply(mtcars[, c(3, 5, 6, 7)], 2, FUN = sum)

#-----------------------------------------------------------------------------------------------------------------------------------------------------
#/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#lapply()

#Aplica uma função sobre uma lista ou vetor. Retorna o resultado como lista.
  
  lapply(mtcars, FUN = sum)
  
  
  
  
  
  
  
  
  
  
  
  
  
#-----------------------------------------------------------------------------------------------------------------------------------------------------
#/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#sapply()  
  
#O mesmo que lapply(), mas paresenta o resultado de formamais amigável
#Aplica a função às colunas
  
  sapply(mtcars, FUN = sum)  
 
#-----------------------------------------------------------------------------------------------------------------------------------------------------
#/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#tapply()  
  
#O mesmo que lapply(), mas paresenta o resultado de formamais amigável
#Aplica a função às colunas  
  
#Média de preço praticado para cada fornecedor
  
  tapply(dataset_loja[,c("preco")], dataset_loja[,ncol(dataset_loja)], mean)  
  
#-----------------------------------------------------------------------------------------------------------------------------------------------------
#/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#vapply()  

#Semelhante ao sapply(), mas apresenta um tipo de valor de retorno pré-estabelecido
  
#Obter o resumo estatístico das variáveis
  
  vapply(dataset_loja[,-c(1,2,ncol(dataset_loja))], FUN = fivenum, FUN.VALUE = c(Min. = 0, "1stQu." = 0, Media = 0, "3rd Qu." = 0, Max = 0))
  
#-----------------------------------------------------------------------------------------------------------------------------------------------------
#/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#mapply()  
  
#Uma função passada como argumento é aplicada aos primeiros elementos de cada argumento de forma sequencial. É uma versão multivariada do sapply().

  mapply(FUN = function(x, y, z){(x*y) + z}, dataset_loja[,c("preco")], dataset_loja[,c("total_estoque")], dataset_loja[,c("total_vendas")])

#-----------------------------------------------------------------------------------------------------------------------------------------------------
#/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#rapply()  
  
#O mesmo que lapply(), mas paresenta o resultado de formamais amigável
#Aplica a função às colunas

  rapply(dataset_loja[,-c(1,2, ncol(dataset_loja))], mean, classes = "numeric")
  
  
  
  
  
  
  
  
  
  
