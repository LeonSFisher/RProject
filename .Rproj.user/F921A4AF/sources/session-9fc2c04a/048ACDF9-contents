######################################################################################################################################################
######################################################################################################################################################

#LISTAS

######################################################################################################################################################
######################################################################################################################################################

#-----------------------------------------------------------------------------------------------------------------------------------------------------
#/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#CRIANDO LISTAS

#Para criar uma lista usamos a função list()
#Listas podem ser criadas compondo todos os tipos de dados e estruturas disponíveis
#As listas manterão a estrutura original dos objetos que lhe servem de elemento
#Podemos ter valores inteiros, lógicos, double, complex, vetores, matrizes, dataframes e até outras listas dentro de uma lista

  valor1 <- 55
  
  vetor1 <- c(-3i, 2i)
  
  matriz <- matrix(c(2, 3, 4, -1), nrow = 2)
  
  dataf1 <- cbind(c(1, 2, 3), c("leandro", "caio", "marcos"), c(TRUE, FALSE, FALSE))
  
  dataf2 <- mtcars
  
  lista1 <- list(-3, "a", 7, 8:12)  
  
  lista2 <- list(valor1, vetor1, matriz, dataf1, dataf2, lista1)

#-----------------------------------------------------------------------------------------------------------------------------------------------------
#/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#DIFERENÇA DE COMPORTAMENTO ENTRE LISTAS E VETORES

#Quanto à integridade das substruturas
#Vetores dão continuidade numa sequência

  vetor2 = c(999, "6", 7, 8:12)
 
#Listas mantêm a sequência como um vetor com unidade de valor próprio dentro da lista
  
  lista3 = list(999, "6", 7, 8:12)

#-----------------------------------------------------------------------------------------------------------------------------------------------------  
#Quanto à integridado dos tipos de dados
  
  typeof(vetor2[1])
  
  typeof(lista2[[1]])
 
#-----------------------------------------------------------------------------------------------------------------------------------------------------
#/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#NOMEANDO LISTAS E ELEMENTOS DA LISTA
 
#Nomeando elementos internos da lista 
#Nomenado a matriz da lista
  
  nomes_col <- c("nota1", "nota2")
  
  nomes_lin <- c("josé", "ricardo")
  
  colnames(lista2[[3]]) <- nomes_col
  
  rownames(lista2[[3]]) <- nomes_lin
  
  lista2[[3]]
  
#-----------------------------------------------------------------------------------------------------------------------------------------------------
#Nomeando as listas em si
  
  lista4 <- list("a", "casa", 104, FALSE, c(1:9))
  
  nomeslista <- c("letra", "objeto", "número", "logico", "vetor")
  
  names(lista4) <- nomeslista
  
#-----------------------------------------------------------------------------------------------------------------------------------------------------
#/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#INDEXANDO LISTAS
  
#Acessando valores na lista pelo índice
#Um só par de [] pode ser usado
  
  lista2[1]
  
#Normalmente usa-se índice entre [[]] 
  
  lista2[[1]]     
  
#-----------------------------------------------------------------------------------------------------------------------------------------------------  
#Diferença entre usar um ou dois colchetes
#Estrutura interna
#Com [[]] acessamos os valores da estrutura correspondente
  
  typeof(lista4[[5]])
  
  sqrt(lista4[[5]])
  
  sqrt(lista4[["vetor"]])
  
#Estrutura externa
#Com [] acessamos a estrutura em si
  
  typeof(lista4[5])
  
  sqrt(lista4[3])
  
  sqrt(lista4["vetor"])

#-----------------------------------------------------------------------------------------------------------------------------------------------------
#Indexando estruturas internas da lista
#Acessando o vetor da lista anterior com um para de []  
  
  lista2[4]  
  
#Acessando o vetor da lista anterior com [[]]  
  
  lista2[[4]]  

#-----------------------------------------------------------------------------------------------------------------------------------------------------  
#Acessando subposições de elemntos da lista
#Acessando o primeiro valor do vetor da lista anterior  
  
  lista2[[2]][1]  
  
#Acessandoa terceira coluna do dataframe da lista anterior
  
  lista2[[5]][,3]
  
#Acessandoa terceira coluna do dataframe da lista anterior
  
  lista2[[5]][4,]
  
#Acessandoa terceira coluna do dataframe da lista anterior
  
  lista2[[5]][4, 2] 
  
#-----------------------------------------------------------------------------------------------------------------------------------------------------
#Acessando dataframes dentro de listas
#Através do nome da coluna com o nome $  
  
  lista2[[5]]$mpg
  
#Através do nome da coluna no indexador
  
  lista2[[5]]["hp"]
  
#Podemos fazer filtros análogos
  
  lista2[[5]][1:5, "hp"]
  
#Selecionando um único valor
  
  lista2[[5]][1, 3]
  
#Filtrando vários dados
  
  lista2[[5]][1:5, c("hp", "mpg")]
  
#Acessando valor do vetor pelo seu nome
  
  lista4[["vetor"]][3]
  
#-----------------------------------------------------------------------------------------------------------------------------------------------------
#/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#INSERINDO E MODIFICANDO VALORES E OBJETOS DA LISTA
  
#Modificando valores
  
  lista2[[5]][4, 2] = 0

#-----------------------------------------------------------------------------------------------------------------------------------------------------  
#Incluindo novos elementos
#Inserindo nova coluna na matriz da lista
  
  nova_col <- c(4, 4)
  
  cbind(lista2[[3]], nova_col)
  
#-----------------------------------------------------------------------------------------------------------------------------------------------------
#/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#DESFAZENDO LISTAS
  
#Trasformar lista em vetor
#Um vetor é um tipo de dado estruturado homogêneo
#Após acabarmos com a lista, os elementos, agora pertencentes a um vetor, sofrem coerção
  
  lista5 <- list("a", "b", TRUE, 4:8, lista4)
  
  x <- unlist(lista5)
  
  typeof(x)
 
#----------------------------------------------------------------------------------------------------------------------------------------------------- 
#Podemos desfazer a lista preservando as estruturas internas
  
  x <- unlist(lista5, recursive = FALSE)

  typeof(x)

#-----------------------------------------------------------------------------------------------------------------------------------------------------  
#Desfazendo a lista e decidindo se os nomes devem ser preservados
  
  x <- unlist(lista4, use.names = FALSE)
  
  y <- unlist(lista4, use.names = TRUE)  
  
#-----------------------------------------------------------------------------------------------------------------------------------------------------