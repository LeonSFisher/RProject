print('GeeksForGeeks', file = sys.stderr)
import sys
print('GeeksForGeeks', file = sys.stderr)
print('GeeksForGeeks', file = "C:\\Users\\Leandro Luz\\Desktop\\python\\novo_arquivo.txt")
print('GeeksForGeeks', file = "C:\\Users\\Leandro Luz\\Desktop\\python\\novo_arquivo.txt")
import sys
print('Achei um erro!', file = sys.stderr)
"""
Este é um comentário
Composto de mais de uma linha.
Ele é feito utilizando três aspas.
"""
print("Executar esse print")
quit
as.data.frame(matrix(1 : 24, nrow = 4, ncol = 6))
noquote(cbind('BY NAME' = letters[1:5], '|' = '|', 'BY INDEX' = 1:5, '|' = '|'))
attach(mtcars)
mpg
'cyl'
cyl
sum(cyl)
detach(mtcars)
cat(nome, "pesa", peso, "quilos!")
cat("O valor é:", 155, ", e nada menos!")
print("b")
x <- "cachorro"
print(x)
print('Olá, mundo!')
msg1 <- "Nada a ver!"
print(msg1)
"Eu estou aqui!"
print(noquote("Eu estou aqui!"))
"Eu estou aqui!"
print("Eu estou aqui!")
print(noquote("Eu estou aqui!"))
noquote(print("Eu estou aqui!"))
noquote(print("Eu estou aqui!"))
noquote("Eu estou aqui!")
mtcars$mpg
attach(mtcars)
sum(mpg)
detach(mtcars)
dataframe_1 <- mtcars
dataframe_2 <- mtcars[1:10, ]
sum(dataframe_1$mpg)
sum(dataframe_2$mpg)
attach(dataframe_2)
sum(mpg)
attach(dataframe_2, pos = 1)
attach(dataframe_1, pos = 2)
sum(mpg)
attach(dataframe_2, pos = 2)
attach(dataframe_1, pos = 3)
sum(mpg)
detach(dataframe_1)
detach(dataframe_2)
dataframe_novo <- mtcars
dataframe_novo['mpg']
dataframe_novo['mpg'] <- 0
dataframe_novo['mpg']
dataframe_novo
dataframe_novo$mpg <- 1
dataframe_novo$mpg
dataframe_novo
dataframe_novo <- mtcars
attach(dataframe_novo)
dataframe_novo['mpg']
dataframe_novo['mpg'] <- 0
dataframe_novo
dataframe_novo <- mtcars
attach(dataframe_novo)
dataframe_novo$mpg <- 1
dataframe_novo$mpg
dataframe_novo
install.packages(dplyr)
install.packages("dplyr")
?install.packages
?list.files
data()
data("airquality")
xisto <- read.table("E:\\GITHUB\\RProject\\Subdiretorios\\dir5\\xisto.txt", sep = ',', header = TRUE)
xisto
local <- "E:\\GITHUB\\RProject\\Subdiretorios\\dir5"
list.files(local, pattern = "\\.csv$")
list.files(local, pattern = "\\.txt$")
list.files(local, pattern = "xis$")
list.files(local, pattern = "xis")
local <- "E:\\GITHUB\\RProject\\Subdiretorios\\dir5"
list.files(local, pattern = "\\.csv$")
list.files(local, pattern = "\\.txt$")
list.files(local, pattern = "xis")
list.files(local, pattern = "xis", ignore.case = FALSE)
list.files(local, pattern = "xis", ignore.case = TRUE)
?getwd()
?getwd()
list.files()
list.files(path = caminho, all.files = TRUE)
caminho <- "E:\\GITHUB\\RProject\\Subdiretorios"
list.files(path = caminho, all.files = TRUE)
list.files(path = caminho, all.files = FALSE)
vetor_1 <- c(2, 3, 0);
vetor_2<- c(-2, -3, 0);
vetor_1 <- c(2, 3, 0); vetor_2 <- c(-2, -3, 0)
getwd()
setwd(choose.dir())
choose.dir()
endereco <- choose.dir()
?choose.dir()
list.files(caminho, full.names = FALSE)
caminho <- "E:\\GITHUB\\RProject\\Subdiretorios"
list.files(caminho, full.names = FALSE)
list.files(caminho, full.names = TRUE)
list.files(caminho, all.files = TRUE, full.names = TRUE)
local <- "E:\\GITHUB\\RProject\\Subdiretorios\\dir5"
list.files(local, pattern = "arquivo")
list.files(local, pattern = "\\.csv$")
list.files(local, pattern = "\\.txt$")
list.files(local, pattern = "csv", ignore.case = FALSE)
list.files(local, pattern = "csv", ignore.case = TRUE)
list.files(local, pattern = "csv_", ignore.case = FALSE)
list.files(local, pattern = "csv_", ignore.case = TRUE)
list.files(local, pattern = "CSV_", ignore.case = TRUE)
list.files(local, pattern = "CSV_", ignore.case = FALSE)
list.files(local, pattern = "csv_", ignore.case = TRUE)
list.files(local, pattern = "CSV_", ignore.case = TRUE)
list.files(local, pattern = "arquivo")
list.files(local, pattern = "csv")
list.files(local, pattern = "csv_")
list.dirs(path = caminho, full.names = FALSE)
list.dirs(path = caminho, full.names = TRUE)
list.dirs(path = caminho, recursive = TRUE)
list.dirs(path = caminho, recursive = FALSE)
?list.files()
list.files(caminho, include.dirs = FALSE)
list.files(caminho, include.dirs = TRUE)
list.files(caminho, include.dirs = TRUE)
list.files("E:\\GITHUB\\RProject")
list.files("E:\\GITHUB\\RProject", include.dirs = FALSE)
list.files("E:\\GITHUB\\RProject", include.dirs = TRUE)
list.files(path = caminho, all.files = TRUE)
list.files(path = caminho, all.files = TRUE, no.. = FALSE)
list.files(path = caminho, all.files = TRUE, no.. = TRUE)
list.files(caminho, recursive = TRUE)
list.files(caminho, recursive = TRUE, include.dirs = TRUE)
list.files(caminho, recursive = TRUE, include.dirs = FALSE)
list.files("E:\\GITHUB\\RProject\\Subdiretorios", recursive = TRUE, include.dirs = TRUE)
list.files("E:\\GITHUB\\RProject\\Subdiretorios", recursive = TRUE, include.dirs = FALSE)
list.files(caminho, recursive = FALSE)
list.files("E:\\GITHUB\\RProject\\Subdiretorios\\dir6", recursive = TRUE, include.dirs = TRUE)
list.files("E:\\GITHUB\\RProject\\Subdiretorios\\dir6", recursive = TRUE, include.dirs = FALSE)
list.files("E:\\GITHUB\\RProject\\Subdiretorios\\dir6", recursive = F, include.dirs = TRUE)
list.files("E:\\GITHUB\\RProject\\Subdiretorios\\dir6", recursive = F, include.dirs = FALSE)
list.files("E:\\GITHUB\\RProject\\Subdiretorios\\dir6", recursive = TRUE, include.dirs = TRUE)
list.files("E:\\GITHUB\\RProject\\Subdiretorios\\dir6", recursive = TRUE, include.dirs = FALSE)
list.files(caminho, recursive = FALSE)
list.files("E:\\GITHUB\\RProject\\Subdiretorios\\dir6", recursive = FALSE)
list.files("E:\\GITHUB\\RProject\\Subdiretorios\\dir6", recursive = FALSE)
list.files("E:\\GITHUB\\RProject\\Subdiretorios\\dir6", recursive = FALSE, include.dirs = TRUE)
list.files("E:\\GITHUB\\RProject\\Subdiretorios\\dir6", recursive = FALSE, include.dirs = FALSE)
list.files(c("E:\\GITHUB\\RProject\\Subdiretorios", "E:\\GITHUB\\RProject"))
listas <- c("E:\\GITHUB\\RProject\\Subdiretorios\\dir5", "E:\\GITHUB\\RProject\\Subdiretorios\\dir6")
caminhos <- c("E:\\GITHUB\\RProject\\Subdiretorios\\dir5", "E:\\GITHUB\\RProject\\Subdiretorios\\dir6")
list.files(caminhos, all.files = FALSE, recursive = FALSE)
list.dirs(caminhos, all.files = FALSE, recursive = FALSE)
list.dirs(caminhos, recursive = FALSE)
list.dirs(caminhos, recursive = FALSE)
caminhos <- c("E:\\GITHUB\\RProject\\Subdiretorios\\dir5", "E:\\GITHUB\\RProject\\Subdiretorios\\dir6")
list.dirs(caminhos, recursive = FALSE)
?replicate
library()
.packages()
(.packages())
search()
?library()
library("graphics", help = "graphics")
library(help = splines)
library("dplyr", lib.loc = "E:\\GITHUB\\RProject\\Subdiretorios\\dir3")
library()
library(lib.loc = .Library)
library()
library(help = splines)
?help.start()
?library()
library()
(.packages())
search()
mtcars
search()
?(.packages())
?.packages()
.packages()
(.packages())
.packages(all.available = TRUE, lib.loc = "E:\\GITHUB\\RProject\\Subdiretorios\\dir3")
.packages(all.available = F, lib.loc = "E:\\GITHUB\\RProject\\Subdiretorios\\dir3")
?getwd()
?warnings()
?warnings()
last.warning
last.warning()
warnings(...)
matriz <- matrix(c(-1, 0, 2, 4, 5, -9, 5, 5, -2), nrow = 3)
sqrt(matriz)
warnings()
warnings()
summary(warnings())
options()
?options()
?choose.dir()
max(table(mtcars$mpg))
?list.files()
sqrt(4/0)
sqrt("a")
sqrt(-1)
valor <- sqrt(-1)
valor
valor_1 <- sqrt("a")
valor_2 <- sqrt(-1)
?list.files()
dir()
dir()
dir("E:\\GITHUB\\RProject\\Subdiretorios")
dir(path = "E:\\GITHUB\\RProject\\Subdiretorios")
dir(path = caminhos, all.files = FALSE, full.names = FALSE, recursive = FALSE, include.dirs = TRUE)
caminhos <- c("E:\\GITHUB\\RProject\\Subdiretorios\\dir5", "E:\\GITHUB\\RProject\\Subdiretorios\\dir6")
dir(path = caminhos, all.files = FALSE, full.names = FALSE, recursive = FALSE, include.dirs = TRUE)
?install.packages
?install.packages
demo("graphics", echo = FALSE)
demo("graphics", echo = TRUE, ask = FALSE)
demo("graphics", echo = TRUE, ask = TRUE)
demo("graphics", echo = FALSE, ask = TRUE)
demo("graphics", echo = TRUE, ask = TRUE)
demo("graphics", echo = TRUE, ask = FALSE)
demo("graphics", echo = FALSE, ask = TRUE)
demo("graphics", echo = FALSE, ask = FALSE)
demo("graphics", echo = TRUE, ask = FALSE)
demo("graphics", lib.loc = c("C:\\Program Files\\R\\R-4.2.2\\library", "E:\\GITHUB\\RProject\\Subdiretorios\\dir5"))
demo(lib.loc = c("C:\\Program Files\\R\\R-4.2.2\\library", "E:\\GITHUB\\RProject\\Subdiretorios\\dir5")
demo(lib.loc = c("C:\\Program Files\\R\\R-4.2.2\\library", "E:\\GITHUB\\RProject\\Subdiretorios\\dir5"))
demo("", lib.loc = c("C:\\Program Files\\R\\R-4.2.2\\library", "E:\\GITHUB\\RProject\\Subdiretorios\\dir5"))
if (c(TRUE, TRUE, FALSE)){
print("Valor verdadeiro")
}
if (c(TRUE, TRUE, FALSE)){
a <- "Olá, mundo!"
}
a
if (c(TRUE, TRUE)){
a <- "Olá, mundo!"
}
if (c(1==1, 3==3)){
a <- "Olá, mundo!"
}
v <- c(-1, 3, -5, 7, 8)
ifelse(v < 0, "negativo", "positivo")
format(Sys.time(), "%H")
?packageVersion
packageVersion("dplyr", lib.loc = "E:\\GITHUB\\RProject\\Subdiretorios\\dir3")
packageVersion("agricolae")
?old.packages()
old.packages(lib.loc = "E:\\GITHUB\\RProject\\Subdiretorios\\dir3")
old.packages(repos = "https://cloud.r-project.org")
old.packages(instPkgs = c("agricolae", "ggplot2", "dplyr"))
install.packages()
old.packages("agricolae", checkBuilt = "1.3.5")
old.packages("agricolae", checkBuilt = "1.1.5")
update.packages(lib.loc = "E:\\GITHUB\\RProject\\Subdiretorios\\dir3")
update.packages("dplyr", lib.loc = "E:\\GITHUB\\RProject\\Subdiretorios\\dir3")
update.packages("dplyr", lib.loc = "E:\\GITHUB\\RProject\\Subdiretorios\\dir3")
update.packages(ask = TRUE)
update.packages(lib.loc = "E:\\GITHUB\\RProject\\Subdiretorios\\dir3", ask = TRUE)
update.packages(lib.loc = "E:\\GITHUB\\RProject\\Subdiretorios\\dir3", ask = TRUE)
update.packages(lib.loc = "E:\\GITHUB\\RProject\\Subdiretorios\\dir3", ask = F)
new.packages()
new.packages(lib.loc = "E:\\GITHUB\\RProject\\Subdiretorios\\dir3")
library(rgdal)
library(agricolae)
detach("package:agricolae")
?detach
library(agricolae)
detach("package:agricolae", character.only = TRUE)
detach("package:agricolae", character.only = FALSE)
detach("package:agricolae", force = TRUE)
library(agricolae)
detach("package:agricolae", force = TRUE)
?remove.packages
remove.packages(c("ggplot2", "dplyr"), "E:\\GITHUB\\RProject\\Subdiretorios\\dir3")
?help.start()
help.start()
?help.start()
help.start("C:\\Program Files\\Google\\Chrome\\Application\\chrome")
help.start(browser =  "C:\\Program Files\\Google\\Chrome\\Application\\chrome")
help.start(browser = "C:\\Program Files\\BraveSoftware\\Brave-Browser\\Application\\brave")
help.start(browser = "C:\\Program Files\\Mozilla Firefox\\firefox")
help.start(browser = "C:\\Users\\Leandro Luz\\AppData\\Local\\Programs\\Opera")
help.start(browser = "C:\\Users\\Leandro Luz\\AppData\\Local\\Programs\\Opera\\opera")
help.start(browser = "C:\\Program Files (x86)\\Microsoft\\Edge\\Application\\msedge")
?RSiteSearch
RSiteSearch("cosine", restrict = c("functions", "descriptions", "news", "Rfunctions"))
??cos
??cos
??
#-----------------------------------------------------------------------------------------------------------------------------------------------------
#/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#AJUDA PELA FUNÇÃO HELP
#Ajuda de uma função com a função help (nome da função, não o assunto). Pode ser entre aspas ou não.
#Perceba que R mostra a ajuda para função relacionadas: trigonométricas, no caso.
help("cos")
help(help)
help(help)
help("cos", package = c("ggplot2", "graphics"))
help(help, verbose = TRUE)
help(help, verbose = FALSE)
help("cos", help_type = "text")
?help.search
help.search('random')
help.search('random', package = c("base", "ggplot2", "dplyr"))
help("cos", lib.loc = "E:\\GITHUB\\RProject\\Subdiretorios\\dir3")
help.search('random', lib.loc = "E:\\GITHUB\\RProject\\Subdiretorios\\dir3"))
help.search('random', types = c("vignette", "help", "demo"))
help.search('rand', agrep = TRUE)
?find
apropos('mt')
objects(grep("base", search()))
seq(1, 0, )
?grep
?example
dir3 <- "E:\\GITHUB\\RProject\\Subdiretorios\\dir3"
install.packages(c("dplyr", "ggplot2"), lib = dir3)
example("log", lib.loc = "E:\\GITHUB\\RProject\\Subdiretorios\\dir3")
example("log", lib.loc = "C:\\Program Files\\R\\R-4.2.3\\library\\base")
example("log", lib.loc = "C:\\Program Files\\R\\R-4.2.3\\library")
example("log", give.lines = T)
example("log", give.lines = F)
example("log", type = "console")
example("log", type = "html")
example("log", echo = FALSE)
example("log", echo = TRUE)
example("log", verbose = TRUE)
example("log", verbose = TRUE)
example("log", echo = TRUE, prompt.prefix = "aviso")
mode(4.4)
typeof(4.4)
TRUE <- 3
FALSE <- 4
T <- 7
F <- 0
c(T, T, T, F, F)
TRUE + FALSE
TRUE + TRUE + TRUE
TRUE < FALSE
FALSE < TRUE
TRUE/2
TRUE - 5
mode(mean)
typeof(mean)
n <- 3-4i
as.logical(n) #complex diferentes de zero são TRUE e iguais a zero são FALSE
n <- 0-3i
as.logical(n) #complex diferentes de zero são TRUE e iguais a zero são FALSE
n <- 3-0i
as.logical(n) #complex diferentes de zero são TRUE e iguais a zero são FALSE
n <- 0-0i
as.logical(n) #complex diferentes de zero são TRUE e iguais a zero são FALSE
valor <- sqrt(pi/17)
string <- as.character(valor)
valor
valor <- as.numeric(string)
string <- as.character(valor)
valor <- as.numeric(string)
valor
valor <- as.double(sqrt(pi/17))
valor
?mode
storage.mode("casa")
storage.mode(mean)
?typeof
mode(4l)
mode(4L)
.Primitive()
.Primitive
.primitive
?storage.mode
x <- 2L         #numeric / integer
y <- 5.7        #numeric / double
z <- "casa"     #caracter
w <- TRUE       #logical
m <- 44E110     #numeric / double
n <- 4-3i       #complex
is.numeric(x)
is.numeric(y)
is.numeric(z)
is.numeric(w)
is.numeric(m)
valor <- 45
valor
mode(valor)
mode(valor) <- "character"
mode(valor)
valor
storage.mode(valor)
valor <- 45
storage.mode(valor)
storage.mode(valor) <- "character"
valor
storage.mode(valor)
valor <- 77
storage.mode(valor)
storage.mode(valor) <- "character"
valor
storage.mode(valor)
valor <- 45
mode(valor)
valor <- 45
mode(valor)
valor <- 77
storage.mode(valor)
2 ^ 5
2**5
'^'(3, 2)
`^`(3, 2)
5L == "5"
5 == "5"
?identical
identical(vetor1, vetor2, attrib.as.set = TRUE)
vetor1 <- c(1, 2, 3)
vetor2 <- c(3, 1, 2)
identical(vetor1, vetor2, attrib.as.set = TRUE)
identical(vetor1, vetor2, attrib.as.set = FALSE)
identical(-0, +0, num.eq = FALSE)
identical(-0, +0, num.eq = TRUE)
is.double(Inf)
is.double(-Inf)
is.integer(Inf)
is.integer(-Inf)
exp(-Inf)
0/Inf
(0:3)^Inf
valores <- c(NA, 0 / 0, Inf - Inf, Inf, 5)
is.na(valores)
is.nan(valores)
is.finite(valores)
is.infinite(valores)
print(x <- 15)
`turma do barulho` <- "A3"
`turma do barulho`
'numero bom' <- 7
'numero bom'
"numero ruim" <- 13
"numero ruim"
`numero bom` * `numero ruim`
getOption("defaultPackages")
nchar(texto, type = "chars")
texto = "Olá, mundo!!!!"
nchar(texto, type = "chars")
nchar(texto, type = "bytes")
nchar(texto, type = "width")
?letters
?as.null(3)
?is.na(2)
?is.numeric(Inf)
?is.double(Inf)
?is.integer(Inf)
?is.finite(valores)
?assign
?print(x)
?paste("Está um dia", "muito chuvoso")
x <- "carros novos"
paste(idade, x, sep = ": ")
idade <- "Eu tenho 15"
paste(idade, x, sep = ": ")
idade <- "Eu tenho"
x <- "15 carros novos"
paste(idade, x, sep = ": ")
paste("Eu tenho", x, sep = ": ", collapse = "$$")
paste("Eu tenho", x, "e velhos", sep = ": ", collapse = "$$")
?nchar(texto)
texto = "Olá, a todos os 123 mundos!!!!"
nchar(texto)
nchar(texto, type = "chars")
nchar(texto, type = "bytes")
nchar(texto, type = "width")
nchar(c("A", "casa", "nova", 5))
?substring("Olá, mundo!", 6, 8)
substring("Olá, mundo!", 6, 8)
substr("Olá, mundo!", 6, 8)
?substr("Olá, mundo!", 6, 8)
?noquote(texto)
?warnings()
?is.numeric(x)
?as.integer(y)
?storage.mode(valor)
?identical(5, 7)
?as.null(3)
?as.null(3)
?is.null(3)
?paste("Está um dia", "muito chuvoso")
?nchar(texto)
?substring("Olá, mundo!", 6, 8)
msg1 <- "Estamos aqui!"
msg2 <- 'Venha você também.'
paste(msg1, msg2)
print(paste(msg1, msg2))
?print(5L)
?noquote("Eu estou aqui!")
noquote("Eu estou aqui!", right = TRUE)
noquote("Eu estou aqui!", right = FALSE)
?cat("O valor é:", 155)
cat("O valor é", 155, sep = ":")
cat("O valor é", 155, sep = ": ")
mensagem <- ?format(15.33 , width = 20, justify = "l")
?format
