resultado <- factor(valores, labels = rotulos, ordered = FALSE, levels = niveis)
resultado
resultado <- factor(valores, labels = rotulos, ordered = TRUE, levels = niveis)
resultado
rotulos <- c("Pernambuco", "Ceará")
resultado <- factor(valores, labels = rotulos, ordered = TRUE, levels = niveis, exclude = c("SP", "AM"))
resultado
niveis_fatores = gl(3, 4, labels = c("eu", "tu", "ele"))
niveis_fatores
niveis_fatores = gl(3, 4, labels = c("eu", "tu", "ele", "ela", "nós"))
niveis_fatores
niveis_fatores = gl(3, 4, labels = c("eu", "tu", "ele", "ela", "nós"), ordered = TRUE)
iveis_fatores
niveis_fatores
niveis_fatores = gl(3, 4, labels = c("eu", "tu", "ele", "ela", "nós"), ordered = TRUE, length = 10)
niveis_fatores
niveis_fatores = gl(3, 4, labels = c("eu", "tu", "ele", "ela", "nós"), ordered = TRUE, length = 12)
niveis_fatores
niveis_fatores = gl(3, 4, labels = c("eu", "tu", "ele", "ela", "nós"), ordered = TRUE, length = 15)
niveis_fatores
nlevels(valores)
nlevels(resultado)
levels(resultado)
min(resultado)
max(resultado)
rotulos <- c("Pernambuco", "Ceará", "São Paulo", "Amazonas")
valores <- c("PE", "CE", "SP", "SP", "PE", "SP", "AM", "AM", "PE", "SP", "CE")
resultado <- factor(valores, labels = rotulos, ordered = FALSE, levels = niveis)
resultado <- factor(valores, labels = rotulos, ordered = TRUE, levels = niveis)
nlevels(resultado)
levels(resultado)
min(resultado)
max(resultado)
is.factor(resultado)
class(resultado)
is.factor(mtcars$gear)
class(mtcars$gear)
dados <- factor(mtcars$gear)
is.factor(dados)
class(dados)
dados1 <- factor(mtcars$gear)
is.factor(dados)
class(dados)
dados2 <- as.factor(mtcars$gear)
is.factor(dados2)
class(dados2)
dados[3]
dados[3] <- 3
dados[3]
dados[3] <- 9
dados1[3]
dados1[3] <- 3
dados1[3]
dados1[3] <- 9
dados1
levels(dados1) <- c(levels(dados1), 9)
dados1
levels(dados1)
dados1[3] <- 9
dados1
resultado[1] < resultado[2]
resultado[1] > resultado[4]
resultado[1] == resultado[1]
resultado[1] < resultado[2]
resultado[1] > resultado[4]
resultado <- factor(valores, labels = rotulos, ordered = F, levels = niveis, exclude = c("SP", "AM"))
resultado <- factor(valores, labels = rotulos, ordered = FALSE, levels = niveis)
resultado[1] < resultado[2]
resultado[1] > resultado[4]
resultado[1] == resultado[1]
valor1 <- 55
vetor1 <- c(-3i, 2i)
matriz <- matrix(c(2, 3, 4, -1), nrow = 2)
dataf1 <- cbind(c(1, 2, 3), c("leandro", "caio", "marcos"), c(TRUE, FALSE, FALSE))
dataf2 <- mtcars
lista1 <- list(-3, "a", 7, 8:12)
lista2 <- list(valor1, vetor1, matriz, dataf1, dataf2, lista1)
vetor2 = c(999, "6", 7, 8:12)
lista3 = list(999, "6", 7, 8:12)
typeof(vetor2[1])
typeof(lista2[[1]])
typeof(vetor2[4])
typeof(lista3[[4]])
vetor2[4]
lista3[[4]]
lista1 <- list("casa", 987, TRUE)
lista1
names(lista1) <- elementos
elementos <- c("objeto", "número", "tem_garagem")
names(lista1) <- elementos
lista1
matriz <- matrix(c(-1, 2, 0, 1, 2, 4, 5, -1, 4), nrow = 3)
matriz
lista2 <- list(TRUE, 876, matriz)
colnames(lista2[[3]]) <- valores_colunas
valores_colunas <- c("coluna1", "coluna2", "coluna3")
valores_linhas <- c("linha1", "linha2", "linha3")
colnames(lista2[[3]]) <- valores_colunas
rownames(lista2[[3]]) <- valores_linhas
matriz
lista2[[3]]
matriz
lista2[[3]]
matriz
colnames(matriz) <- valores_colunas
rownames(matriz) <- valores_linhas
matriz
lista1 <- list(-3, "a", 7, 8:12)
lista1[1]
lista1[[1]]
lista1[4]
lista1[[4]]
typeof(lista1[[5]])
sqrt(lista1[[5]])
typeof(lista1[5])
sqrt(lista1[3])
typeof(lista1[5])
sqrt(lista1[5])
lista1[[5]]
lista1[5]
lista1 <- list(-3, "a", 7, 8:12)
lista1[[5]]
lista1[5]
lista1[4]
lista1[[4]]
valor1 <- 55
vetor1 <- c(-3i, 2i)
matriz <- matrix(c(2, 3, 4, -1), nrow = 2)
dataf1 <- cbind(c(1, 2, 3), c("leandro", "caio", "marcos"), c(TRUE, FALSE, FALSE))
dataf2 <- mtcars
lista1 <- list(-3, "a", 7, 8:12)
lista2 <- list(valor1, vetor1, matriz, dataf1, dataf2, lista1)
lista2[6]
lista2[[6]]
valor1 <- 55
vetor1 <- c(-3i, 2i)
matriz <- matrix(c(2, 3, 4, -1), nrow = 2)
dataf1 <- cbind(c(1, 2, 3), c("leandro", "caio", "marcos"), c(TRUE, FALSE, FALSE))
dataf2 <- mtcars
lista1 <- list(-3, "a", 7, 8:12)
lista2 <- list(valor1, vetor1, matriz, dataf1, dataf2, lista1)
lista2[6]
lista2[[6]]
lista2[3]
lista2[[3]]
lista2[2]
lista2[[2]]
lista2[[2]][1]
lista2[[5]][,3]
lista2[[5]][4,]
lista2[[5]]$mpg
lista2[[5]]["hp"]
lista2[[5]][1:5, "hp"]
lista2[[5]][1, 3]
lista2[[5]][1:5, c("hp", "mpg")]
lista4[["vetor"]][3]
names(lista2) <- c("valor", "vetor", "matriz", "data1", "data2", "lista")
lista2[["vetor"]][3]
lista2[["vetor"]][1]
dataf2
lista2[[5]][4, 2]
lista2[[5]][4, 2] = 0
lista2[[5]][4, 2]
matriz
nova_col <- c(4, 4)
cbind(lista2[[3]], nova_col)
colnames(lista2[[3]]) <- c("col_1", "col_2", "col_3")
x <- cbind(lista2[[3]], nova_col)
colnames(x) <- c("col_1", "col_2", "col_3")
x
lista1 <- list("casa", FALSE, 35)
lista2 <- list("a", "b", TRUE, 4:8, lista1)
lista2
x <- unlist(lista2)
typeof(x)
x <- unlist(lista2, recursive = FALSE)
typeof(x)
x
x <- unlist(lista2, use.names = FALSE)
x
y <- unlist(lista2, use.names = TRUE)
y
names(lista2) <- c("letra1", "letra2", "logico", "sequencia", "outra_lista")
x <- unlist(lista2, use.names = FALSE)
x
y <- unlist(lista2, use.names = TRUE)
y
visivel <- c(2, -3, 5)
.oculta <- 55
ls()
ls(all = TRUE)
ls(all.names = TRUE)
ls(sorted = TRUE)
ls(sorted = FALSE)
rm(visivel)
remove(visivel)
rm(.oculta)
remove(.oculta)
lista = ls()
rm(list = lista)
rm(list = ls())
rm(list = ls(all.names = TRUE))
matriz <- matrix((1:12), nrow=3)
matriz
apply(matriz, 1, FUN = max)
apply(matriz, 2, FUN = max)
apply(matriz, c(1, 2), FUN = max)
cumsum(c(1, 2, 5, 6, 7))
apply(matriz, 2, FUN = cumsum)
apply(matriz, 1, FUN = cumsum)
apply(matrix, 2, range)
apply(matriz, 2, range)
apply(matriz, 1, sqrt)
apply(matriz, 2, sqrt)
apply(matriz, c(1, 2), sqrt)
vetor <- c(1, 1, 3, 5, 6)
lapply(vetor, FUN = sqrt)
vetor1 <- c(1, 1, 3, 5, 6)
lapply(vetor1, FUN = sqrt)
lista1 <- list(TRUE, 1:3, -3i)
lista1 <- list(TRUE, 1:3, 3i)
lapply(lista1, sqrt)
df <- data.frame(a=1:3, b=4:6, c=7:9, d=10:12)
lapply(df, sqrt)
df
getwd()
caminho <- getwd()
RSiteSearch("cosine", matchesPerPage = 5)
vetor_pos <- c(2, 1, 5, 6, 8, 99, 2, 3, 5, 6, 65, 21, 2, 2, 3, 11, 1, 1, 7, 7)
vetor_neg <- c(-2, -1, -5, -6, -8, -99, -2, -3, -5, -6)
vetor_mis <- c(4, 4, -1, -4, 5, 7, 14, -22, 5, -6, 0, 4, 4, -2, 1, 1, 7, 4, 9, 1)
(vetor_mis<1) & (vetor_mis<2)
(vetor_mis<1) | (vetor_mis<2)
vetor_mis & vetor_pos
vetor_mis | vetor_pos
vetor_mis && vetor_pos
vetor_mis || vetor_pos
vetor_mis <- 2
vetor_pos <- 0
vetor_pos <- c(2, 1, 5, 6, 8, 99, 2, 3, 5, 6, 65, 21, 2, 2, 3, 11, 1, 1, 7, 7)
vetor_neg <- c(-2, -1, -5, -6, -8, -99, -2, -3, -5, -6)
vetor_mis <- c(4, 4, -1, -4, 5, 7, 14, -22, 5, -6, 0, 4, 4, -2, 1, 1, 7, 4, 9, 1)
vetor_mis & vetor_pos
vetor_mis && vetor_pos
vetor_mis | vetor_pos
vetor_mis || vetor_pos
cat("O valor é:", 155, ", e nada menos!")
cat("O valor é:", 155, "\b, e nada menos!")
cat("O valor é:", 155, ", e nada menos!")
cat("O valor é:", 155, "\b, e nada menos!")
cat("Primeira linha\nSegunda linha")
getwd()
caminho <- getwd()
setwd("E:\\GITHUB\\RProject")
caminho <- "E:\\GITHUB\\RProject"
setwd(caminho)
setwd(choose.dir())
choose.dir(default = "E:\\GITHUB")
choose.dir(caption = "Escolha o Workspace do R")
setwd(getwd())
list.files()
list.files("E:\GITHUB\RProject")
list.files("E:\\GITHUB\\RProject")
caminho <- "E:\\GITHUB\\RProject"
list.files(caminho)
list.files(caminho, all.files = FALSE)
list.files(caminho, all.files = TRUE)
list.files(caminho, full.names = FALSE)
list.files(caminho, full.names = TRUE)
list.files(caminho, all.files = TRUE, full.names = FALSE)
list.files(caminho, all.files = TRUE, full.names = TRUE)
list.files(caminho, recursive = FALSE)
list.files(caminho, recursive = TRUE)
list.dirs(caminho)
list.dirs(caminho, recursive = TRUE)
list.dirs(caminho, recursive = FALSE)
list.files("E:\\GITHUB\\RProject\\Subdiretorios")
caminho <- "E:\\GITHUB\\RProject\\Subdiretorios"
list.files(caminho)
list.files(caminho, all.files = FALSE)
list.files(caminho, all.files = TRUE)
list.files(caminho, full.names = FALSE)
list.files(caminho, full.names = TRUE)
list.files(caminho, all.files = TRUE, full.names = FALSE)
list.files(caminho, all.files = TRUE, full.names = TRUE)
list.files(caminho, recursive = FALSE)
list.files(caminho, recursive = TRUE)
list.files(caminho, recursive = TRUE)
list.dirs(caminho)
list.dirs(caminho, recursive = TRUE)
list.dirs(caminho, recursive = FALSE)
library()
(.packages())
library(graphics)
library(graphics, character.only = FALSE)
library(graphics, character.only = TRUE)
library("graphics", character.only = FALSE)
library("graphics", character.only = TRUE)
library("raster", attach.required = FALSE)
library(graphics, logical.return = FALSE)
library(graphics, logical.return = TRUE)
library(graphics, verbose = FALSE)
library(graphics, verbose = TRUE)
library(graphics, quietly = TRUE)
pacotes <- c("dplyr", "ggplot2", "e1071")
library(pacotes)
library(c("dplyr", "ggplot2", "e1071"))
require(ggplot2)
require("agricolae")
require("ggplot2", character.only = TRUE)
require("ggplot2", character.only = FALSE)
require(ggplot2, character.only = TRUE)
require(ggplot2, character.only = FALSE)
agricolae::skewness(mtcars$hp)
library(agricolae)
skewness(mtcars$hp)
install.packages("dplyr")
install.packages("dplyr", "agricolae")
install.packages(c("dplyr", "agricolae"))
pacotes <- c("dplyr", "agricolae")
install.packages(pacotes)
install.packages("dplyr", "agricolae")
url1 <- "https://cran-r.c3sl.ufpr.br" #CRAN Brasil, UFPR
url2 <- "https://cran.fiocruz.br"     #CRAN Brasil, Fiocruz
install.packages("dplyr", repos = url1)
install.packages("agricolae", repos = url2)
install.packages(c("dplyr", "ggplot2"), repos = url1)
dir1 <- "E:\\GITHUB\\RProject\\Subdiretorios\\dir1"
dir3 <- "E:\\GITHUB\\RProject\\Subdiretorios\\dir3"
dir2 <- "E:\\GITHUB\\RProject\\Subdiretorios\\dir2"
install.packages(c("dplyr"), lib = c(dir1, dir2))
install.packages(c("dplyr", "ggplot2"), lib = dir3)
arquivo_compactado <- "E:\\GITHUB\\RProject\\Subdiretorios\\dir4"
install.packages(c("dplyr", "ggplot2"), destdir = arquivo_compactado)
install.packages("dplyr", dependencies = TRUE)
install.packages(c("dplyr", "ggplot2"), verbose = TRUE)
install.packages(c("dplyr", "ggplot2"), quiet = TRUE)
install.packages(c("dplyr", "ggplot2"), Ncpus = 4)
require("agricolae")
agricolae::skewness(mtcars$hp)
library(agricolae)
skewness(mtcars$hp)
demo(graphics)
demo(graphics, character.only = TRUE)
demo("graphics", package = "graphics")
demo("graphics", package = "base")
demo("graphics", lib.loc = c("C:\\Program Files\\R\\R-4.2.2\\library", "E:\\GITHUB\\RProject\\Subdiretorios\\dir5"))
demo("graphics", lib.loc = c("E:\\GITHUB\\RProject\\Subdiretorios\\dir5", "E:\\GITHUB\\RProject\\Subdiretorios\\dir5"))
demo("graphics", type = "console")
demo("graphics", type = "html")
packageVersion("agricolae")
packageVersion("graphics")
old.packages()
old.packages(repos = "https://cloud.r-project.org")
update.packages("dplyr")
update.packages("dplyr", repos = "https://cloud.r-project.org")
update.packages("dplyr", "ggplot2")
pacotes <- c("dplyr", "ggplot2", "e1071")
update.packages(pacotes)
update.packages(c("dplyr", "ggplot2", "e1071"))
update.packages()
new.packages()
new.packages(repos = "https://cloud.r-project.org")
library(rgdal)
detach("package:rgdal")
remove.packages("ggplot2", "dplyr")
pacotes <- c("ggplot2", "dplyr", "sp")
remove.packages(pacotes)
remove.packages(c("ggplot2", "dplyr", "sp"))
RSiteSearch("cosine")
RSiteSearch("cosine sine")
RSiteSearch("{logistic regression}")
RSiteSearch("{logistic regression} {glm object}")
RSiteSearch("\"logistic regression\" \"glm object\"")
RSiteSearch("{logistic regression} \"glm object\"")
RSiteSearch("'logistic regression' 'glm object'")
RSiteSearch('"logistic regression" "glm object"')
RSiteSearch("cosine", restrict = c("functions", "descriptions", "news", "Rfunctions"))
RSiteSearch("cosine", sortby = "score")
RSiteSearch("cosine", sortby = "date:late")
RSiteSearch("cosine", sortby = "date:early")
RSiteSearch("cosine", sortby = "subject")
RSiteSearch("cosine", sortby = "subject:descending")
RSiteSearch("cosine", sortby = "size")
RSiteSearch("cosine", sortby = "size:descending")
RSiteSearch("cosine", matchesPerPage = 5)
RSiteSearch("cosine sine", words = "all")
RSiteSearch("cosine sine", words = "any")
??
#-----------------------------------------------------------------------------------------------------------------------------------------------------
#Definindo o pacote em que procurar a documentação (procurar ajuda para cosseno no pacote base)
help("cos", package = "base")
help("cos", package = c("base", "ggplot2", "graphics"))
help("cos", package = c("ggplot2", "graphics"))
help("cos", try.all.packages = TRUE)
example("log")
example("log", character.only = TRUE)
example("log", character.only = FALSE)
example(log, character.only = FALSE)
example(log, character.only = TRUE)
example("log", package = "base")
example("log", package = "ggplot2")
caminhos <- c("C:\\Program Files\\R\\R-4.2.2\\library", "E:\\GITHUB\\RProject\\Subdiretorios\\dir1")
example("cos", lib.loc = caminhos)
example("cos", lib.loc = c("C:\\Program Files\\R\\R-4.2.2\\library", "C:\\Users\\Leandro Luz\\Desktop\\R\\lib1"))
example("log", type = "console")
example("log", type = "html")
example("log", echo = FALSE)
example("log", echo = TRUE)
vetor_pos <- c(2, 1, 5, 6, 8, 99, 2, 3, 5, 6, 65, 21, 2, 2, 3, 11, 1, 1, 7, 7)
vetor_neg <- c(-2, -1, -5, -6, -8, -99, -2, -3, -5, -6)
vetor_mis <- c(4, 4, -1, -4, 5, 7, 14, -22, 5, -6, 0, 4, 4, -2, 1, 1, 7, 4, 9, 1)
vetor_mis
(vetor_mis < 1)
(vetor_mis < 2)
(vetor_mis < 1) & (vetor_mis < 2)
vetor_mis & vetor_pos
vetor_mis | vetor_pos
(vetor_mis < 1) && (vetor_pos < 2)
(vetor_mis < 1) || (vetor_pos < 2)
vetor_mis && vetor_pos
vetor_mis || vetor_pos
a <- 3
b <- 0
a & b
a && b
a | b
a || b
?nchar
cat("Estou","vendo", "uma linda", "nuvem", fill = 2, labels = c("1", "2", "3", "4"))
?cat
cat("Estou","vendo", "uma linda", "nuvem", file = "E:\\GITHUB\\RProject\\Subdiretorios\\dir5\\bizu.txt", append = TRUE)
cat("O valor é:", 155, ", bocó!", file = "E:\\GITHUB\\RProject\\Subdiretorios\\dir5\\bizu.txt", append = FALSE)
cat("Estou","vendo", "uma linda", "nuvem", "\n", file = "E:\\GITHUB\\RProject\\Subdiretorios\\dir5\\bizu.txt", append = FALSE)
cat("O valor é:", 155, ", bocó!", file = "E:\\GITHUB\\RProject\\Subdiretorios\\dir5\\bizu.txt", append = TRUE)
format("Olá, mundo!", width = 20, justify = "n")
format("Olá, mundo!", width = 20, justify = "c")
toupper("Olá, mundo!")
tolower("Olá, mundo!")
cat("E:\\GITHUB\\RProject\\Subdiretorios\\dir5\\bizu.txt")
cat("Casa\tCarro\tLivro\tBicicleta")
cat("Nova frase\bcachorro")
cat("Nova frase\b\b\b\b\bcachorro")
cat("O valor é:", 155, "\b, e nada menos!")
cat("Voltando\rLeandro")
vetor3 <- c(1, 2, 3)
vetor4 <- c(-1,-2,-3)
vetor5 <- c(0, 4, 9)
vetor2 <- c(rep(vetor3, 3), rep(vetor4, 5), rep(vetor5, 2))
vetor2
vetor2 <- c(2, 3, -1, c(7, 9, 0))
vetor2[5]
vetor2[[6]]
indice <- 2
vetor2[indice]
indices <- c(1, 3, 5)
vetor2[indices]
vetor2[1:3]
vetor2[3:1]
vetor3 <- c(2, 1, 5)
nomesvetor3 <- c("carros", "motos", "bicicletas")
names(vetor3) <- nomesvetor3
vetor3["motos"]
vetor3[c("carros", "bicicletas")]
vetor4 <- c(2, 8, 3, 1, -1)
selecao <- c(TRUE, FALSE, FALSE, TRUE, TRUE)
vetor4[selecao]
vetor4[c(TRUE, FALSE, FALSE, TRUE, TRUE)]
vetor4 > 2
vetor4[vetor4 > 2]
vetor5 <- c(LETTERS, letters)
vetor5[vetor5 > 'g']
sort(vetor5)
vetor6 <- c(-1, -4, 3, 4, 9, 7, 99, -15)
which(vetor6 > 7)
which.min(vetor6)
which.max(vetor6)
vetor6[1] <- 0
vetor6[c(1, 2, 3)] <- c(-1, -1, -1)
vetor7 <- c(-1, -4, 3, 4, 9, 7, 99, -15)
vetor7[c(-1, -3)]
vetor7[-c(1, 3)]
vetor7[-1*c(1, 3)]
vetor7[-2:-5]
vetor7[-5:-2]
vetor7[-"João"]
vetor7[15] <- 77
vetor7
vetorComplex <- c(3+2i, 4.4, 2L, FALSE)
typeof(vetorComplex[1])
typeofe(vetorComplex[2])
typeof(vetorComplex[3])
typeof(vetorComplex[4])
vetorComplex[1]
vetorComplex[2]
vetorComplex[3]
vetorComplex[4]
vetorNum <- c(4.4, 2L, FALSE)
typeof(vetorNum[1])
typeof(vetorNum[2])
typeof(vetorNum[3])
vetorNum[1]
vetorNum[2]
vetorNum[3]
vetorInt <- c(2L, FALSE)
typeof(vetorInt[1])
typeof(vetorInt[2])
vetorInt[1]
vetorInt[2]
vetorLog <- c(FALSE)
typeof(vetorLog[1])
vetorLog[1]
