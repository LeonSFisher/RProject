sqrt(pi/17)
options(digits = 3)
sqrt(pi/17)
load("E:/GITHUB/RProject/.RData")
options(prompt = 'leo>', continue = ">>")
?history
load("E:/GITHUB/RProject/.RData")
options(prompt = 'leo> ', continue = ">>")
find(mtcars)
find('mtcars')
find(skewness)
find(skeewness)
find(cos)
find('skewness')
find('skeewness')
find('cos')
apropos('mtcars')
apropos('mtc')
apropos('mt')
demo(persp)
demo(Hershey)
demo(plotmath)
apropos('mt')
library(help = spacial)
library(help = base)
objects(grep("base", search()))
fix(mtcars)
novo <- mtcars
fix(novo)
novo[1,]
par(ask=TRUE)
cut(mtcars$mpg, seq(10, 35, 5))
table(cut(mtcars$mpg, seq(10, 35, 5)))
barplot(table(cut(mtcars$mpg, seq(10, 35, 5))))
par(ask=TRUE)
barplot(table(dados))
barplot(as.integer(table(dados3)), names.arg = nivel)
cut(mtcars$mpg, seq(10, 35, 5))
table(cut(mtcars$mpg, seq(10, 35, 5)))
barplot(table(cut(mtcars$mpg, seq(10, 35, 5))))
?par
ls()
objects()
(.packages())
search()
log10(7)
log(7, base = 10)
cos(pi/2)
factorial(77)
choose(10, 3)
gamma(4.66)
lgamma(4.66)
exp(-Inf)
exp(-Inf)
0/Inf
0:3^Inf
(0:3)^Inf
Inf-Inf
Inf/Inf
vetorNA <- c(3, 2, -1, NA, 3, NA, NaN, 44, NA)
seq(along=vetorNA)[is.na(vetorNA)]
which(is.na(vetorNA))
vetorNA[is.na(vetorNA)] <- 0
vetorNA
ifelse(is.na(vetorNA), 0, vetorNA)
x <- 5 #(Atribuição)
x < -5 #(Comparação)
y <- 5
z <- y[-1]
length(z)
z
vetor <- scan()
vetor
load("C:/Users/Leandro Luz/Desktop/novo.RData")
.First()
.First <- function(){options(prompt = 'ch1> ')}
setwd("C:/Users/Leandro Luz/Desktop/R")
.First <- function(){options(prompt = 'ch1> ')}
setwd("C:/Users/Leandro Luz/Desktop/R")
save.image("C:/Users/Leandro Luz/Desktop/R/ch1.RData")
load("C:/Users/Leandro Luz/Desktop/R/ch1.RData")
setwd("C:/Users/Leandro Luz/Desktop/R")
load("C:/Users/Leandro Luz/Desktop/R/ch1.RData")
nova = function(string){
msg = paste("Mensagem", string, sep = ": ")
return(msg)
}
nova
nova()
print
nova
texto <- "Olá, mundo!"
texto
noquote(texto)
vetor1 <- c(4, 3, 1)
nomesvetor1 <- c("casas", "carros", "motos")
names(vetor1) <- nomesvetor1
vetor1
no.dimnames(vetor1)
no.dimnames(vetor1)
nodimnames(vetor1)
colunas = c("altura", "peso", "idade")
linhas = c("alberto", "francisco", "helder")
vetor =  c(1.78, 1.69, 1.88, 65, 70, 80, 17, 35, 44)
matriz <- matrix(vetor, nrow = 3, ncol = 3, byrow = FALSE, dimnames = list(linhas, colunas))
matriz
no.dimnames(matriz)
help.search('random')
find('mtcars')
help.search('random')
find('mtcars')
help.search('random')
help
cos
help.search(correlation)
help.search(variance)
seq(1, 0, length(100))
seq(1:10, by?
seq(1:10, by?
x <- c(1, '2', 3) ; y <- 5
x <- c(1, '2', 3) ; y <- 5
x + y
x <- c(1 : 1000, by = 2)
x
sum(x^2)
c(1:50, by = 5)
x <- c(4 < 5, 'a' < 'b')
x
4 == 4 & 5 == 5
5 != 5 | 6 == 6
5 == 5 | 6 != 6
x <- 5 & y <- 6
x <- 5 & y <- 6
x <- NA ; y <- 5 ; x == NA & y == 5
x==NA
x=='NA'
Inf*0
1-Inf
x <- c(TRUE, 'a')
mode(x)
x <- c(TRUE, 1)
mode(x)
x <- c('a', 1)
mode(x)
mode(letters)
as.logical(letters)
as.numeric(letters)
x <- 0:10
as.logical(x)
x <- c(TRUE, TRUE, FALSE) ; y <- c(0, 0, 0)
x & y
x && y
?runif
for i in 1:10{
for (i in 1:10){
valor <- runif(1, 0, 1)
x <- c(x, valor)
}
x
x <- c()
for (i in 1:10){
valor <- runif(1, 0, 1)
x <- c(x, valor)
}
x
func <- function(x){
return((sqrt(x)+1))
}
func(-1:10)
find(cor.test())
find('cor.test')
?cor.test
x <- runif(10)
y <- runif(10)
cor.test(x,y)
mtcars
tapply(mtcars, disp, mean)
tapply(mtcars, mtcars$disp, mean)
tapply(mtcars$disp, mtcars$gear, mean)
tapply(mtcars$wt, mtcars$gear, mean)
consumo <- c(13.10,15.20,16.10,14.75,15.35,16.20)
tapply(mtcars$gear, mtcars$hp, mean)
tapply(mtcars$gear, c(mtcars$wt, mtcars$hp), mean)
tapply(mtcars$gear, list(mtcars$wt, mtcars$hp), mean)
tapply(mtcars$gear, list(mtcars$gear, mtcars$carb), mean)
tapply(mtcars$gear, list(mtcars$hp, mtcars$gear), mean)
tapply(mtcars$gear, list(mtcars$gear, mtcars$carb), mean)
tapply(mtcars$gear, list(mtcars$gear, mtcars$carb, mtcars$cyl), mean)
tapply(mtcars$wt, mtcars$gear, mean)
?read.table()
scan()
scan()
library(Rcmdr)
install.packages("Rcmdr")
library(Rcmdr)
install.packages("Rcmdr", dependencies = TRUE)
library(Rcmdr, attach.required = TRUE)
install.packages("Rcmdr")
library(Rcmdr)
install.packages("RcmdrMisc")
library(Rcmdr)
install.packages(c("car", "caret", "cli", "covr", "dbplyr", "gtable", "hardhat", "haven", "hexbin", "hms", "htmltools", "interp", "parallelly", "pillar", "ps", "Rcpp", "rgl", "rlang", "rmarkdown", "sf", "terra", "tibble", "vctrs", "xfun", "XML"))
library("Rcmdr")
library("Rcmdr")
reticulate::repl_python()
help(print)
print(5, "patinhos foram passear")
print("Eu tenho", 5, "cachorros")
print("Eu tenho um total de", 5)
print("Nunca vou me esquecer.\nNunca mesmo!")
print(5, "patinhos foram passear")
print("Eu tenho", 5, "cachorros")
print("Eu tenho um total de", 5)
print("Nunca vou me esquecer.\nNunca mesmo!")
print("Estou assim", "furioso!", sep = ":")
print("Estou assim", "furioso!", sep = " : ")
print("Estou assim", "furioso!", sep = ": ")
help(print)
print("Última letra será apagada", end = "\b")
print("Última letra será apagada", end = "\b\b")
print("Última letra será apagada", end = "\b")
print("Última letra será apagada")
print("Última letra será apagada", end = "\b")
print("Última letra será apagada")
print("Última letra será apagada", file = "C:\\Users\\Leandro Luz\\Desktop\\impressao.txt")
print("Última letra será apagada", file = "C:\\Users\\Leandro Luz\\Desktop\\impressao.txt", flush = True)
import sys
print('GeeksForGeeks', file = sys.stderr)
library("ISwR")
plot.new()
library(Rcmdr)
library(Rcmdr)
plot.new()
library(Rcmdr)
plot.new()
library(Rcmdr)
plot.new()
library(Rcmdr)
plot.new(); library('Rcmdr')
help.start()
(x <- 15)
c
help("cos")
help(cos)
help("cos")
example(plot)
x <- seq(-3, 3, length = 101)
y <- dnorm(x) # assign standard normal values to y
plot(x, y, type = 'l') # 'l' stands for line
vetor <- vector()
vetor
vetor <- character()
vetor
is.numeric(Inf)
is.numeric(-Inf)
is.integer(Inf)
is.integer(-Inf)
is.double(Inf)
is.double(-Inf)
matriz <- matrix(c(1, -1, 1, -2, 2, 2, 3, 3, -3), nrow = 3)
length(matriz)
resultado <- array(mtcars$wt, dim = c(2, 3, 4))
length(resultado)
x <- 12
if (x > 18) print("Maior de idade") else print("Menor de idade")
y <- vector()
mode(y)
y[1] <- "casa"
y[2] <- "carro"
mode(y)
func1 <- function(z){
y <- 2 * z
y
}
func1(3)
y
func1(3)
y
y <- 5
func1(3)
y
func2 <- function(z){
y <<- 2 * z
y
}
func2(3)
y
y <- 0
func2(3)
func2 <- function(z){
y <<- 2 * z
y
}
y <- 0
func2(3)
y
detach(package:rgdal)
serie1 <- runif(150)
serie2 <- runif(150)
plot(serie1, serie2)
pairs(cbind(mtcars$hp, mtcars$wt))
pairs(mtcars)
visivel <- c(2, -3, 5)
install.packages("tidyverse")
?getwd
?choose.dir
?list.files()
?choose.dir
?list.files()
list.files(path = "E:\\GITHUB\\RProject\\Subdiretorios")
caminho <- "E:\\GITHUB\\RProject\\Subdiretorios"
list.files(path = caminho)
list.files(caminho)
?list.dirs
list.dirs(path = "E:\\GITHUB\\RProject\\Subdiretorios")
list.dirs("E:\\GITHUB\\RProject\\Subdiretorios")
caminho <- "E:\\GITHUB\\RProject\\Subdiretorios"
list.dirs(caminho)
?list.dirs
list.dirs(path = caminho, full.names = FALSE)
list.dirs(path = caminho, full.names = TRUE)
Sys.Date()
Sys.time()
reticulate::repl_python()
print(5, "patinhos foram passear")
print("Eu tenho", 5, "cachorros")
print("Eu tenho um total de", 5)
#Concatenação de mensagens
print("Eu sempre quis", "três casas")
print("Eu sempre quis", "três casas", "amarelas")
print("Eu tenho", 5, "cachorros pretos", "e também", 2, "gatos cinzas")
print("Nunca vou me esquecer.\nNunca mesmo!")
print("Estou assim", "furioso!", sep = ": ")
print("Olá, mundo!")
print("Última letra será apagada")
print("Última letra será apagada", end = "\b")
print("Última letra será apagada", end = "\b")
print("Última letra será apagada")
print("Última letra será apagada", end = "\b")
print("Última letra será apagada")
quit
reticulate::source_python('E:/GITHUB/PythonProject/Scripts/_00.0_Função_print.py')
reticulate::repl_python()
print("Última letra será apagada", end = "\b"); print("Última letra será apagada")
print('GeeksForGeeks', file = sys.stderr)
import sys
print('GeeksForGeeks', file = sys.stderr)
print('GeeksForGeeks', file = "C:\\Users\\Leandro Luz\\Desktop\\python\\novo_arquivo.txt")
print('GeeksForGeeks', file = "C:\\Users\\Leandro Luz\\Desktop\\python\\novo_arquivo.txt")
import sys
print('Achei um erro!', file = sys.stderr)
"""
Este é um comentário
Composto de mais de uma linha.
Ele é feito utilizando três aspas.
"""
print("Executar esse print")
quit
as.data.frame(matrix(1 : 24, nrow = 4, ncol = 6))
noquote(cbind('BY NAME' = letters[1:5], '|' = '|', 'BY INDEX' = 1:5, '|' = '|'))
attach(mtcars)
mpg
'cyl'
cyl
sum(cyl)
detach(mtcars)
cat(nome, "pesa", peso, "quilos!")
cat("O valor é:", 155, ", e nada menos!")
print("b")
x <- "cachorro"
print(x)
print('Olá, mundo!')
msg1 <- "Nada a ver!"
print(msg1)
"Eu estou aqui!"
print(noquote("Eu estou aqui!"))
"Eu estou aqui!"
print("Eu estou aqui!")
print(noquote("Eu estou aqui!"))
noquote(print("Eu estou aqui!"))
noquote(print("Eu estou aqui!"))
noquote("Eu estou aqui!")
mtcars$mpg
attach(mtcars)
sum(mpg)
detach(mtcars)
dataframe_1 <- mtcars
dataframe_2 <- mtcars[1:10, ]
sum(dataframe_1$mpg)
sum(dataframe_2$mpg)
attach(dataframe_2)
sum(mpg)
attach(dataframe_2, pos = 1)
attach(dataframe_1, pos = 2)
sum(mpg)
attach(dataframe_2, pos = 2)
attach(dataframe_1, pos = 3)
sum(mpg)
detach(dataframe_1)
detach(dataframe_2)
dataframe_novo <- mtcars
dataframe_novo['mpg']
dataframe_novo['mpg'] <- 0
dataframe_novo['mpg']
dataframe_novo
dataframe_novo$mpg <- 1
dataframe_novo$mpg
dataframe_novo
dataframe_novo <- mtcars
attach(dataframe_novo)
dataframe_novo['mpg']
dataframe_novo['mpg'] <- 0
dataframe_novo
dataframe_novo <- mtcars
attach(dataframe_novo)
dataframe_novo$mpg <- 1
dataframe_novo$mpg
dataframe_novo
install.packages(dplyr)
install.packages("dplyr")
?install.packages
?list.files
data()
data("airquality")
xisto <- read.table("E:\\GITHUB\\RProject\\Subdiretorios\\dir5\\xisto.txt", sep = ',', header = TRUE)
xisto
local <- "E:\\GITHUB\\RProject\\Subdiretorios\\dir5"
list.files(local, pattern = "\\.csv$")
list.files(local, pattern = "\\.txt$")
list.files(local, pattern = "xis$")
list.files(local, pattern = "xis")
local <- "E:\\GITHUB\\RProject\\Subdiretorios\\dir5"
list.files(local, pattern = "\\.csv$")
list.files(local, pattern = "\\.txt$")
list.files(local, pattern = "xis")
list.files(local, pattern = "xis", ignore.case = FALSE)
list.files(local, pattern = "xis", ignore.case = TRUE)
?getwd()
?getwd()
list.files()
list.files(path = caminho, all.files = TRUE)
caminho <- "E:\\GITHUB\\RProject\\Subdiretorios"
list.files(path = caminho, all.files = TRUE)
list.files(path = caminho, all.files = FALSE)
vetor_1 <- c(2, 3, 0);
vetor_2<- c(-2, -3, 0);
vetor_1 <- c(2, 3, 0); vetor_2 <- c(-2, -3, 0)
getwd()
setwd(choose.dir())
choose.dir()
endereco <- choose.dir()
?choose.dir()
list.files(caminho, full.names = FALSE)
caminho <- "E:\\GITHUB\\RProject\\Subdiretorios"
list.files(caminho, full.names = FALSE)
list.files(caminho, full.names = TRUE)
list.files(caminho, all.files = TRUE, full.names = TRUE)
local <- "E:\\GITHUB\\RProject\\Subdiretorios\\dir5"
list.files(local, pattern = "arquivo")
list.files(local, pattern = "\\.csv$")
list.files(local, pattern = "\\.txt$")
list.files(local, pattern = "csv", ignore.case = FALSE)
list.files(local, pattern = "csv", ignore.case = TRUE)
list.files(local, pattern = "csv_", ignore.case = FALSE)
list.files(local, pattern = "csv_", ignore.case = TRUE)
list.files(local, pattern = "CSV_", ignore.case = TRUE)
list.files(local, pattern = "CSV_", ignore.case = FALSE)
list.files(local, pattern = "csv_", ignore.case = TRUE)
list.files(local, pattern = "CSV_", ignore.case = TRUE)
list.files(local, pattern = "arquivo")
list.files(local, pattern = "csv")
list.files(local, pattern = "csv_")
list.dirs(path = caminho, full.names = FALSE)
list.dirs(path = caminho, full.names = TRUE)
list.dirs(path = caminho, recursive = TRUE)
list.dirs(path = caminho, recursive = FALSE)
?list.files()
list.files(caminho, include.dirs = FALSE)
list.files(caminho, include.dirs = TRUE)
list.files(caminho, include.dirs = TRUE)
list.files("E:\\GITHUB\\RProject")
list.files("E:\\GITHUB\\RProject", include.dirs = FALSE)
list.files("E:\\GITHUB\\RProject", include.dirs = TRUE)
list.files(path = caminho, all.files = TRUE)
list.files(path = caminho, all.files = TRUE, no.. = FALSE)
list.files(path = caminho, all.files = TRUE, no.. = TRUE)
list.files(caminho, recursive = TRUE)
list.files(caminho, recursive = TRUE, include.dirs = TRUE)
list.files(caminho, recursive = TRUE, include.dirs = FALSE)
list.files("E:\\GITHUB\\RProject\\Subdiretorios", recursive = TRUE, include.dirs = TRUE)
list.files("E:\\GITHUB\\RProject\\Subdiretorios", recursive = TRUE, include.dirs = FALSE)
list.files(caminho, recursive = FALSE)
list.files("E:\\GITHUB\\RProject\\Subdiretorios\\dir6", recursive = TRUE, include.dirs = TRUE)
list.files("E:\\GITHUB\\RProject\\Subdiretorios\\dir6", recursive = TRUE, include.dirs = FALSE)
list.files("E:\\GITHUB\\RProject\\Subdiretorios\\dir6", recursive = F, include.dirs = TRUE)
list.files("E:\\GITHUB\\RProject\\Subdiretorios\\dir6", recursive = F, include.dirs = FALSE)
list.files("E:\\GITHUB\\RProject\\Subdiretorios\\dir6", recursive = TRUE, include.dirs = TRUE)
list.files("E:\\GITHUB\\RProject\\Subdiretorios\\dir6", recursive = TRUE, include.dirs = FALSE)
list.files(caminho, recursive = FALSE)
list.files("E:\\GITHUB\\RProject\\Subdiretorios\\dir6", recursive = FALSE)
list.files("E:\\GITHUB\\RProject\\Subdiretorios\\dir6", recursive = FALSE)
list.files("E:\\GITHUB\\RProject\\Subdiretorios\\dir6", recursive = FALSE, include.dirs = TRUE)
list.files("E:\\GITHUB\\RProject\\Subdiretorios\\dir6", recursive = FALSE, include.dirs = FALSE)
list.files(c("E:\\GITHUB\\RProject\\Subdiretorios", "E:\\GITHUB\\RProject"))
listas <- c("E:\\GITHUB\\RProject\\Subdiretorios\\dir5", "E:\\GITHUB\\RProject\\Subdiretorios\\dir6")
caminhos <- c("E:\\GITHUB\\RProject\\Subdiretorios\\dir5", "E:\\GITHUB\\RProject\\Subdiretorios\\dir6")
list.files(caminhos, all.files = FALSE, recursive = FALSE)
list.dirs(caminhos, all.files = FALSE, recursive = FALSE)
list.dirs(caminhos, recursive = FALSE)
list.dirs(caminhos, recursive = FALSE)
caminhos <- c("E:\\GITHUB\\RProject\\Subdiretorios\\dir5", "E:\\GITHUB\\RProject\\Subdiretorios\\dir6")
list.dirs(caminhos, recursive = FALSE)
