which.max(matriz)
which.max(matriz)
which.min(array_novo)
which.max(array_novo)
length(array_novo)
length(matriz)
length(vetor)
matriz[1, 1] <- 999
matriz
matriz[c(1, 2), c(1, 2)]
matriz[c(1, 2), c(1, 2)] <- c(0, 0, 0, 0)
matriz
matriz[c(1, 2), c(1, 2)] <- matrix(c(0, 0, 0, 0), nrow = 2, byrow = TRUE)
matriz[c(1, 2), c(1, 2)] <- matrix(c(-4, -4, -4, -4), nrow = 2, byrow = TRUE)
matriz
array_novo[1, 1, 1] <- 999
array_novo
array_novo[c(1, 2), c(1, 2), 1] <- c(0, 0, 0, 0)
array_novo
matriz[c(1, 2), c(1, 2), ] <- array(c(-4, -4, -4, -4), dim = c(2, 2, 1))
matriz[c(1, 2), c(1, 2), ] <- array(c(-4, -4, -4, -4), dim = c(2, 2, 5))
matriz[c(1, 2), c(1, 2), 1] <- array(c(-4, -4, -4, -4), dim = c(2, 2, 1))
matriz[c(1, 2), c(1, 2), ] <- array(rep(-4, 20), dim = c(2, 2, 5))
array(rep(-4, 20), dim = c(2, 2, 5))
matriz[c(1, 2), c(1, 2), ] <- array(rep(-4, 20), dim = c(2, 2, 5))
array(rep(-4, 4), dim = c(2, 2, 1))
matriz[c(1, 2), c(1, 2), 1] <- array(rep(-4, 4), dim = c(2, 2, 1))
array_novo[c(1, 2), c(1, 2), ] <- rep(-4, 20)
array_novo
matriz[1, 4] <- 1999
matriz
matriz[, 4] <- 1999
vetor <- c(-1, -4, 3, 4, 9, 7, 99, -15)
length(vetor)
vetor[1] <- NULL
length(vetor)
vetor
vetor <- c(-1, -4, 3, 4, 9, 7, 99, -15)
length(vetor)
vetor[8] <- NULL
length(vetor)
rownames(tabela)
numeros = c(1, 2, 3, -1, -4)
objetos = c("carro", "casa", "faca", "bola", "foice")
salario = c(500, 550, 600, 900, 630)
valores = c(1.2, 2.5, 6.7, 4.4, 9.0)
classes = c(3, 3, 4, 3, 5)
tabela = data.frame(numeros, objetos, salario, valores, classes)
rownames(tabela)
rownames(tabela) <- c("marcus", "flavio", "cezar", "gilberto", "fernanda")
tabela
numeros = c(1, 2, 3, -1, -4)
objetos = c("carro", "casa", "faca", "bola", "foice")
salario = c(500, 550, 600, 900, 630)
valores = c(1.2, 2.5, 6.7, 4.4, 9.0)
classes = c(3, 3, 4, 3, 5)
tabela = data.frame(numeros, objetos, salario, valores, classes)
tabela
rownames(tabela)
rownames(tabela) <- c("marcus", "flavio", "cezar", "gilberto", "fernanda")
tabela
colnames(tabela)
colnames(tabela) <- c("numeros_totais", "objetos_valiosos", "salario_semanal", "val_novo","depart")
tabela
tabela = data.frame(numeros, objetos, salario, valores, classes, row.names = c("tico", "teco", "monte", "geninha", "bzum"))
tabela
tabela = data.frame(numeros, objetos, salario, valores, classes, row.names = c("tico", "teco", "monte", "geninha", "bzum"), stringsAsFactors = TRUE)
levels(tabela$objetos)
tabela = data.frame(num = numeros, obj = objetos, sal = salario, val = valores, class = classes)
tabela
attach(tabela)
objetos
detach(tabela)
objetos
numeros = c(1, 2, 3, -1, -4)
objetos = c("carro", "casa", "faca", "bola", "foice")
salario = c(500, 550, 600, 900, 630)
valores = c(1.2, 2.5, 6.7, 4.4, 9.0)
classes = c(3, 3, 4, 3, 5)
tabela = data.frame(numeros, objetos, salario, valores, classes)
tabela[, 2:3]
tabela$num
tabela$numeros
tabela["val"]
tabela["valores"]
tabela[ ,"valores"]
tabela[3, 'val']
tabela[3, 'valores']
tabela[c(1, 2), c(2, 3)]
tabela[2, 3]
linha <- 4
coluna <- "valores"
tabela[linha, coluna]
tabela[linha, linha]
linha <- c(1, 2)
coluna <- c(2, 3)
tabela[linha, coluna]
tabela[1:2, 1:3]
matriz[2:1, 3:1]
mtabela[2:1, 3:1]
tabela[2:1, 3:1]
tabela[seq(1, 2), seq(1, 3, 1)]
tabela = data.frame(numeros, objetos, salario, valores, classes, row.names = c("tico", "teco", "monte", "geninha", "bzum"))
tabela
atributos <- c("objeto","salário","classes")
tabela[atributos]
atributos <- c("objeto","salario","classes")
tabela[atributos]
atributos <- c("objetos","salario","classes")
tabela[atributos]
tabela[c(2, 4), atributos]
personagens <- c("teco","geninha")
tabela[personagens, atributos]
tabela
tabela[]
colunas <- c(TRUE, FALSE, FALSE, TRUE, TRUE)
tabela[colunas]
tabela[ ,colunas]
linhas <- c(TRUE, FALSE, FALSE, TRUE, TRUE)
tabela[linhas, ]
tabela[linhas, colunas]
tabela[c(TRUE, FALSE, FALSE, TRUE, TRUE), c(TRUE, FALSE, FALSE, TRUE, TRUE)]
tabela[tabela$sal > 600, ]
selecao <- (mtcars$mpg > 17)&(mtcars$gear == 4)
mtcars[selecao,]
tabela[tabela$sal > 600, ]
tabela[tabela$sal > 600, c("classe","numeros")]
tabela[tabela$sal > 600, c("classes","numeros")]
selecao <- (mtcars$mpg > 17)&(mtcars$gear == 4)
mtcars[selecao, ]
selecao <- (mtcars$mpg > 17) & (mtcars$gear == 4)
mtcars[selecao, ]
selecao <- (mtcars$mpg > 15) & (mtcars$gear == 4)
mtcars[selecao, ]
tabela[tabela$objetos > "casa", ]
vetor[veto r> "bicicletas"]
vetor[vetor > "bicicletas"]
tabela[c(-1, -2), c(-4,-5)]
tabela[c(-1, -2), c(-4,-5)]
tabela[-c(1, 2), -c(4,5)]
tabela[-1*c(1, 2), -1*c(4, 5)]
which(tabela$numeros > 1)
which(tabela$numeros < 0)
tabela[1, "numeros"] <- 999
tabela
tabela[1:5, "numeros"] <- c(0, 0, 0, 0, 0)
tabela
tabela[1:5, "numeros"] <- c(1)
tabela
selecao <- (mtcars$mpg > 15) & (mtcars$gear == 4)
subset(mtcars, selecao)
subset(mtcars, selecao, c(1, 3, 5))
subset(mtcars, selecao, select = c(hp, wt, vs))
subset(mtcars, selecao, select = c("hp", "wt", "vs"))
?data.frame
?options
?cbind
?tibble
library(tibble)
?tibble
?fix
?data()
data(list = c("mtcars"))
data("mtcars", package = "ggplot2")
data("mtcars", package = "base")
data("mtcars")
?mtcars
data("mtcars", package = "datasets")
data("mtcars", lib.loc = "E:\\GITHUB\\RProject\\Subdiretorios\\dir3\\dplyr")
data("mtcars")
data("mtcars", verbose = TRUE)
data("mtcars", overwrite = TRUE)
fix("mtcars")
View(matriz)
View(mtcars)
data("mtcars", overwrite = TRUE)
force(mtcars)
data("mtcars", overwrite = TRUE)
data("mtcars", overwrite = TRUE)
?data.frame
?subset
nrow(mtcars)
ncol(mtcars)
?nrow
head(mtcars)
?head
head(mtcars, n = 10)
tail(mtcars)
tail(mtcars, n = 15)
dim(mtcars)
?dim
View(mtcars)
dataframe_1 <- mtcars
dataframe_2 <- mtcars[1:10, ]
sum(dataframe_1$mpg)
sum(dataframe_2$mpg)
attach(dataframe_2, pos = 2)
attach(dataframe_1, pos = 3)
sum(mpg)
detach(dataframe_1)
detach(dataframe_2)
?attach
attach(mtcars)
mpg
sum(mpg)
attach(what = "mtcars", name = "burro")
attach(what = "mtcars")
attach(what = mtcars)
attach(what = mtcars, name = "burro")
burro::mpg
attach(what = mtcars, name = burro)
attach(what = mtcars, warn.conflicts = FALSE)
attach(what = mtcars, warn.conflicts = TRUE)
?detach
dataframe_1 <- mtcars
dataframe_2 <- mtcars[1:10, ]
attach(dataframe_2, pos = 2)
attach(dataframe_1, pos = 3)
sum(mpg)
detach(dataframe_1, unload = TRUE)
niveis <- c("PE", "CE", "SP", "AM")
rotulos <- c("Pernambuco", "Ceará", "São Paulo", "Amazonas")
valores <- c("PE", "CE", "SP", "SP", "PE", "SP", "AM", "AM", "PE", "SP", "CE")
resultado <- factor(valores, labels = rotulos, ordered = FALSE, levels = niveis)
resultado
resultado
resultado <- factor(valores, labels = rotulos, ordered = FALSE, levels = niveis)
resultado <- factor(valores, labels = rotulos, ordered = TRUE, levels = niveis)
resultado
nlevels(resultado)
levels(resultado)
min(resultado)
max(resultado)
novos_rotulos <- c("Pernambuco", "Ceará")
resultado <- factor(valores, labels = novos_rotulos, ordered = TRUE, levels = niveis, exclude = c("SP", "AM"))
resultado
niveis_fatores = gl(3, 4, labels = c("eu", "tu", "ele"))
niveis_fatores = gl(3, 4, labels = c("eu", "tu", "ele", "ela", "nós"))
niveis_fatores
niveis_fatores = gl(3, 4, labels = c("eu", "tu", "ele", "ela", "nós"), ordered = TRUE)
niveis_fatores = gl(3, 4, labels = c("eu", "tu", "ele", "ela", "nós"), ordered = TRUE, length = 10)
niveis_fatores
niveis_fatores = gl(3, 4, labels = c("eu", "tu", "ele", "ela", "nós"), ordered = TRUE, length = 12)
niveis_fatores
niveis_fatores = gl(3, 4, labels = c("eu", "tu", "ele", "ela", "nós"), ordered = TRUE, length = 15)
niveis_fatores
niveis_fatores = gl(3, 4, labels = c("eu", "tu", "ele", "ela", "nós"), ordered = TRUE, length = 15)
niveis_fatores
is.factor(resultado)
class(resultado)
is.factor(mtcars$gear)
class(mtcars$gear)
mode(resultado)
typeof(resultado)
str(resultado)
dados <- factor(mtcars$gear)
is.factor(dados)
class(dados)
dados <- as.factor(mtcars$gear)
is.factor(dados)
class(dados)
?factor
?nlevels(resultado)
?nlevels
?levels(resultado)
?is.ordered(resultado)
?gl
?is.factor(resultado)
?print
print(resultado)
niveis <- c("PE", "CE", "SP", "AM")
rotulos <- c("Pernambuco", "Ceará", "São Paulo", "Amazonas")
valores <- c("PE", "CE", "SP", "SP", "PE", "SP", "AM", "AM", "PE", "SP", "CE")
resultado <- factor(valores, labels = rotulos, ordered = FALSE, levels = niveis)
print(resultado)
print(resultado, quote = TRUE)
print(resultado, max.levels = 5)
print(resultado, max.levels = 2)
print(resultado, max.levels = 1)
print(resultado, max.levels = NULL, width = 5)
print(resultado, max.levels = NULL, width = 1)
print(resultado, quote = FALSE)
print(resultado, quote = TRUE)
print(resultado, max.levels = 1)
print(resultado, max.levels = 10)
niveis <- c("PE", "CE", "SP", "AM")
rotulos <- c("Pernambuco", "Ceará", "São Paulo", "Amazonas")
valores <- c("PE", "CE", "SP", "SP", "PE", "SP", "AM", "AM", "PE", "SP", "CE")
resultado <- factor(valores, labels = rotulos, ordered = FALSE, levels = niveis)
niveis <- c("PE", "CE", "SP", "AM")
rotulos <- c("Pernambuco", "Ceará", "São Paulo", "Amazonas")
valores <- c("PE", "CE", "SP", "SP", "PE", "SP", "AM", "AM", "PE", "SP", "CE")
resultado <- factor(valores, labels = rotulos, ordered = FALSE, levels = niveis)
resultado[3]
resultado[3] <- "Ceará"
resultado
resultado[3]
resultado[3] <- "DF"
levels(resultado) <- c(levels(resultado), "DF")
resultado
resultado[3] <- "DF"
resultado[3]
resultado
resultado <- factor(valores, labels = rotulos, ordered = TRUE, levels = niveis)
resultado[1] < resultado[2]
resultado[1] > resultado[4]
resultado[1] == resultado[1]
resultado <- factor(valores, labels = rotulos, ordered = FALSE, levels = niveis)
resultado[1] == resultado[1]
resultado["Pernambuco"]
resultado["PE"]
?apply(matriz, c(1, 2), sqrt)
?lapply(vetor, FUN = sqrt)
?sapply
?tapply(consumo, grupo, mean)
?mapply(paste, lista1, lista2)
?vapply(lista_vetores, min, FUN.VALUE = numeric(1))
vetor4 <- c(11, 2, "a", 41, "b")
lista_vetores <- list(vetor1, vetor2, vetor4)
vapply(lista_vetores, min, FUN.VALUE = character(1))
vetor1 <- c(1, 7, 7, 4, 6)
vetor2 <- c(7, 17, 5, 1, 1)
vetor3 <- c(11, 2, 87, 41, 8)
lista_vetores <- list(vetor1, vetor2, vetor3)
vapply(lista_vetores, min, FUN.VALUE = numeric(1))
vetor4 <- c(11, 2, "a", 41, "b")
lista_vetores <- list(vetor1, vetor2, vetor4)
vapply(lista_vetores, min, FUN.VALUE = character(1))
vapply(lista_vetores, paste, FUN.VALUE = character(1))
vetor1 <- c(1, 7, 7, 4, 6)
vetor2 <- c(7, 17, 5, 1, 1)
vetor3 <- c(11, 2, 87, 41, 8)
lista_vetores <- list(vetor1, vetor2, vetor3)
vapply(lista_vetores, min, FUN.VALUE = numeric(1))
vapply(lista_vetores, min, FUN.VALUE = character(1))
vapply(lista_vetores, min, FUN.VALUE = double(1))
novo_vetor <- sapply(vetor, sqrt, simplify = TRUE)
vetor <- c(3, 3, 6, 7, 9)
novo_vetor <- sapply(vetor, sqrt)
is.vector(novo_vetor)
novo_vetor <- sapply(vetor, sqrt, simplify = TRUE)
novo_vetor <- sapply(vetor, sqrt, simplify = FALSE)
is.list(novo_vetor)
is.vector(novo_vetor)
novo_vetor <- sapply(vetor, sqrt, simplify = TRUE)
novo_vetor <- sapply(vetor, sqrt, simplify = TRUE)
is.list(novo_vetor)
is.vector(novo_vetor)
novo_vetor <- sapply(vetor, sqrt, simplify = FALSE)
is.list(novo_vetor)
is.vector(novo_vetor)
lista <- list(4, 5, TRUE, FALSE, 16)
novo_vetor <- sapply(lista, sqrt, simplify = TRUE)
is.vector(novo_vetor)
is.list(novo_vetor)
novo_vetor <- sapply(lista, sqrt, simplify = FALSE)
is.vector(novo_vetor)
is.list(novo_vetor)
novo_vetor <- sapply(vetor, sqrt, simplify = TRUE)
is.list(novo_vetor)
is.vector(novo_vetor)
novo_vetor <- sapply(vetor, sqrt, simplify = FALSE)
is.list(novo_vetor)
is.vector(novo_vetor)
novo_vetor <- sapply(vetor, sqrt, simplify = TRUE)
is.list(novo_vetor)
is.vector(novo_vetor)
novo_vetor <- sapply(vetor, sqrt, simplify = TRUE)
is.list(novo_vetor)
is.vector(novo_vetor)
is.list(novo_vetor)
is.vector(novo_vetor)
novo_vetor <- sapply(vetor, sqrt, simplify = FALSE)
is.list(novo_vetor)
is.vector(novo_vetor)
novo_vetor <- sapply(vetor, sqrt, simplify = TRUE)
is.list(novo_vetor)
is.vector(novo_vetor)
novo_vetor <- sapply(lista, sqrt, simplify = FALSE)
is.vector(novo_vetor)
novo_vetor <- sapply(lista, sqrt, simplify = FALSE)
is.vector(novo_vetor)
is.list(novo_vetor)
novo_vetor <- sapply(lista, sqrt, simplify = TRUE)
is.vector(novo_vetor)
is.list(novo_vetor)
vetor1 <- c(1, 7, 7, 4, 6)
vetor2 <- c(7, 17, 5, 1, 1)
vetor3 <- c(11, 2, 87, 41, 8)
lista_vetores <- list(vetor1, vetor2, vetor3)
sapply(lista_vetores, min)
vapply(lista_vetores, range,FUN.VALUE = numeric(2))
lista <- list(a = 1:5, b = 100:110, c = c('a', 'b', 'c'))
novaMensagem = function(string){
msg = paste("Mensagem", string, sep = ": ")
print(msg)
}
novaMensagem("Olá,mundo!")
novaMensagem("Olá, mundo!")
frase = novaMensagem("Olá, mundo louco!")
print(frase)
novaMensagem = function(string){
msg = paste("Mensagem", string, sep = ": ")
return(msg)
}
frase = nova("Olá, mundo louco!")
frase = novaMensagem("Olá, mundo louco!")
print(frase)
novaMensagem = function(string){
msg = paste("Mensagem", string, sep = ": ")
toupper(msg)
}
frase = novaMensagem("Olá,mundo!")
print(frase)
novaMensagem = function(string) msg = paste("Mensagem", string, sep = ": ");
frase = novaMensagem("Olá,mundo!")
print(frase)
novaMensagem
novaMensagem = function(string){
msg = paste("Mensagem", string, sep = ": ")
toupper(msg)
}
novaMensagem
sin
novaMensagem = function(string){
msg = paste("Mensagem", string, sep = ": ")
print(msg)
}
nova("Olá, mundo!")
novaMensagem("Olá, mundo!")
novaMensagem = function(nome, sobrenome, idade){
msg = paste(nome, sobrenome, "tem", idade, "anos.")
print(msg)
}
novaMensagem("Leandro", "Luz", 32)
novaMensagem(idade = 32, sobrenome = "Luz", nome = "Leandro")
novaMensagem(32, "Luz", "Leandro")
soma_arbit = function(...){
vetor = c(...)
soma = 0
for(valor in vetor){
soma = soma + valor
}
return(soma)
}
print(soma_arbit(5, 6, 7, 8, 2:4))
print(soma_arbit(5, 6, 7, 8, 2:4, c(1, 1, 1)))
print(soma_arbit(5, 6, 7, 8, 2:4, c(1, 1, 1), c(-5,-5,-5)))
soma = function(..., teste = TRUE){
if(teste){
vetor = c(...)
soma = 0
for(valor in vetor){
soma = soma + valor
}
return(soma)
}else{
return(0)
}
}
print(soma(teste = FALSE, 5, 6, 7, 8, 2:4, c(1, 1, 1)))
print(soma(teste = TRUE, 5, 6, 7, 8, 2:4, c(1, 1, 1)))
print(soma(5, 6, 7, 8, teste = TRUE, 2:4, c(1, 1, 1)))
print(soma(5, 6, 7, 8, 2:4, c(1, 1, 1), TRUE))
print(soma(TRUE, 5, 6, 7, 8, 2:4, c(1, 1, 1)))
print(soma(5, 6, 7, 8, 2:4, c(1, 1, 1)))
print(soma(TRUE, 5, 6, 7, 8, 2:4, c(1, 1, 1)))
novaFunc <- function(valor){
num <- 2 * valor
num
}
novaFunc(3)
num
num <- 5
novaFunc(3)
num
novaFunc <- function(valor){
num <<- 2 * valor
num
}
novaFunc(3)
num
num <- 0
novaFunc(3)
num
num
caminho <- file.path("E:","GITHUB","RProject","DataSets", "tabela2_1.csv")
?file.choose()
file.choose()
file.choose(new = TRUE)
file.choose()
file.choose()
file.choose()
file.choose(new = TRUE)
?file.path
caminho <- file.path("E:","GITHUB","RProject","DataSets", "tabela2_1.csv", fsep = "*")
caminho
caminho <- file.path("E:","GITHUB","RProject","DataSets", "tabela2_1.csv", fsep = "/")
caminho
?read.table()
?read_delim
??read_delim
??read_delim
?read_xlsx
read.table("E:\\GITHUB\\RProject\\Subdiretorios\\dir5\\xisto.txt", sep = ',', header = TRUE, quote = "@")
read.table("E:\\GITHUB\\RProject\\Subdiretorios\\dir5\\arquivo_texto_beta.txt", sep = ',', header = TRUE, quote = "@")
tabela <- read.csv("tabela2_1.csv")
tabela <- read.csv("E:\\GITHUB\\RProject\\DataSets\\tabela2_1.csv", header = TRUE, sep = ";", dec = ",")
View(tabela)
z <- read.table("E:\\GITHUB\\RProject\\Subdiretorios\\dir5\\arquivo_texto_beta.txt", sep = ',', header = TRUE, quote = "@")
z
z$nome
