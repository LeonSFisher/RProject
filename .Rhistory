vetor
length(na.exclude(vetorNA))
na.omit(vetorNA)
length(na.omit(vetorNA))
na.fail(vetorNA)
plot.new()
base = c(21, 22, 0 , 13, 14)
rotulos = c("Rio","Sampa" ,"Floripa" ,"Recife" ,"Brasilia")
pie(base, rotulos, main = "Cidades", col = rainbow(base))
pie(base, rotulos,main = "Cidades", col = rainbow(length(base)))
porcentagem = round(100*base/sum(base))
pie(base, porcentagem, main = "cidades", col = rainbow(base))
caminho <- "E:\\GITHUB\\RProject\\Subdiretorios\\dir7"
write.csv2(chefes, file = caminho, row.names = F, quote = F)
chefes <- data.frame(c(1, 2, 3, 4, 5, 6, 7,8, 9))
write.csv2(chefes, file = caminho, row.names = F, quote = F)
caminho <- "E:\\GITHUB\\RProject\\Subdiretorios\\dir7\\chefes.csv"
write.csv2(chefes, file = caminho, row.names = F, quote = F)
nomes <- c("carlos", "mathias", "ana")
carros <- c(1, 3, 6)
idade <- c(25, 33, 38)
chefes <- data.frame(nomes, carros, idade)
caminho <- "E:\\GITHUB\\RProject\\Subdiretorios\\dir7\\chefes.csv"
write.csv2(chefes, file = caminho, row.names = F, quote = F)
write.csv2(chefes, file = caminho, row.names = F, quote = F)
??cos
??cos
??base::apply
?base::apply
??base::apply
??cos
lista <- list(4, 5, TRUE, FALSE, 16)
sapply(lista, sqrt)
is.vector(sapply(lista, sqrt))
is.list(sapply(lista, sqrt))
lista <- list(4, 5, TRUE, FALSE, 16)
x <- sapply(lista, sqrt)
is.list(x)
vetor <- c(3, 3, 6, 7, 9)
x <- sapply(vetor, sqrt)
is.vector(x)
df <- data.frame(vetor, vetor*5)
x <- sapply(df, sqrt)
is.data.frame(x)
is.matrix(x)
lista <- list(4, 5, TRUE, FALSE, 16)
x <- sapply(lista, sqrt)
is.list(x)
is.vector(x)
vetor <- c(3, 3, 6, 7, 9)
x <- sapply(vetor, sqrt)
is.vector(x)
is.list(x)
consumo <- c(13.10,15.20,16.10,14.75,15.35,16.20)
grupo<-as.factor(c("15%PB","18%PB","18%PB","15%PB","15%PB","18%PB"))
tapply(consumo, grupo, mean)
L1 <- list(a = LETTERS[c(4,6,12,6)], b = LETTERS[c(1,5,21,1)])
L2 <- list(c = LETTERS[c(4,14,22,20)], d = LETTERS[c(15,15,1,15)])
L1
L2
mapply(paste, l1$a, l1$b, l2$c, l2$d)
L1
L2
mapply(paste, L1$a, L1$b, L2$c, L2$d)
help.search()
help.search(random)
help.search('random')
Random.user()
random.user()
'carro' <- 44
carro -4
'numero bom' <- 55
numero bom - 5
'numero bom' - 5
'numero bom'
numero bom
"numero ruim" <- 13
'numero bom' <- 7
`numero bom` * `numero ruim`
`turma do barulho` <- "A3"
`turma do barulho`
x <- c(1, 2, 3); x
y <- c(2, 3, 0); z <- c(-2, -3, 0); x + y
y <- c(2, 3, 0); z <- c(-2, -3, 0); y + z
x <- 1:100
sink('E:\\GITHUB\\RProject\\Subdiretorios\\dir7\\arquivo.txt')
x
sink()
history(50)
history(10)
history(50)
history(10)
history(30)
numeric(100)
numeric(1, 100)
numeric(100)
print(x <- 15)
x <- 35
mode(x)
a <- 35
mode(a)
b <- 22.654
mode(b)
c <- "casa"
mode(c)
d <- TRUE
mode(d)
e <- -3-5i
mode(e)
f <- 010110110011
mode(f)
f <- charToRaw('010110110011')
mode(f)
vetor <- c()
vetor <- vector()
vetor <- character()
vetor <- character()
vetor <- logical()
vetor <- double()
vetor <- integer()
vetor <- complex()
vetor <- raw()
vetor <- character(length = 10)
vetor1 <- c(1, 2, 3)
vetor2 <- c(-1, 3)
vetor3 = vetor1 * vetor2
vetor3
vetor2 <- c(-1, 3)
vetor1 <- c(1, 2, 3, -4, 7)
vetor1 <- c(-1, 3)
vetor2 <- c(1, 2, 3, -4, 7)
vetor3 <- vetor2/vetor1
vetor3
options(digits = 3)
vetor3 <- vetor2/vetor1
vetor3
vetorNA <- c(3, 2, -1, NA, 3, NA, NaN, 44, NA)
na.exclude(vetorNA)
length(na.exclude(vetorNA))
na.omit(vetorNA)
length(na.omit(vetorNA))
na.fail(vetorNA)
na.action(semNA)
semNA <- na.exclude(vetorNA)
na.pass(vetorNA)
sum(vetorNA)
is.na(vetorNA)
sum(vetorNA[is.na(vetorNA)])
sum(vetorNA[!is.na(vetorNA)])
sum(vetorNA, na.rm = TRUE)
sum(no.na(vetorNA))
peso <- c(66, 74, 88, 100, 71)
altura <- c(1.77, 1.68, 1.81, 1.90, 1.79)
names(peso) <- c("carlos", "fred", "marcos", "biel", "zico")
tabela <- cbind(peso, altura)
tabela["marcos", ]
tabela["marcos", altura]
T <- 7
c(T, T, T)
TRUE <- 7
c(TRUE, TRUE, TRUE)
is.na(NaN)
valores <- c(NA, 0 / 0, Inf - Inf, Inf, 5)
is.na(valores)
is.na(valores)
is.nan(valores)
is.infinite(valores)
is.finite(valores)
is.finite(valores)
is.finite(valores)
is.infinite(valores)
variavel <<- 44
a <<- 3
7 ->> a
a ->> 3
7 <<- a
a <<- b <<- c <<- 0
a <<- b <<- c <<- 0
a <- b <- c <- 0
a <<- b <<- c <<- 0
a <<- b <<- c <<- 8
b
nova = function(string) msg = paste("Mensagem", string, sep = ": ");
frase = nova("Olá,mundo!")
frase2 <- toupper(farse)
nova = function(string) msg = paste("Mensagem", string, sep = ": ");
frase = nova("Olá,mundo!")
frase2 <- toupper(frase)
print(frase)
frase
frase2
source(xxx)
source("xxx.R")
setwd("E:/GITHUB/RProject/Scripts")
source("xxx.R")
frase2
source(xxx)
source("xxx")
source("xxx.R")
source("xxx.R")
farse2
frase2
library(date)
install.packages(date)
install.packages('date')
install.packages('survival')
library(survival)
library(date)
First()
first()
.First()
.First()
x11()
windows()
x <- runif(150)
y <- runif(150)
plot(x, y)
z <- plot(x, y)
z
dados2 = arquivo$idade_anos
plot(dados2)
plot(mtcars$wt)
serie1 <- runif(150)
serie2 <- runif(150)
plot(serie1, serie2)
serie3 <- mtcars$wt
plot(serie3)
pairs(mtcars$wt)
pairs(mtcars$hp, mtcars$wt)
pairs(cbind(mtcars$hp, mtcars$wt))
pairs(mtcars)
pairs(cbind(mtcars$hp, mtcars$wt))
pairs(mtcars)
mtcars
?coplot
lines(serie1, serie2)
lines(serie1, serie2)
rol1 <- runif(25)
rol2 <- runif(25)
lines(rol1, rol2)
rol1 <- runif(25)
rol2 <- runif(25)
lines(rol1, rol2)
plot.new()
lines(rol1, rol2)
serie1 <- runif(150)
serie2 <- runif(150)
plot(serie1, serie2)
rol1 <- runif(25)
rol2 <- runif(25)
lines(rol1, rol2)
serie1 <- runif(150)
serie2 <- runif(150)
plot(serie1, serie2)
lines(serie1, serie2)
options(prompt = 'leo', continue = ">>")
hist(c(2,3,4))
options(prompt = 'leo>', continue = ">>")
hist()
hist()
hist(tudo, )
setwd("E:/GITHUB/RProject")
.First()
sqrt(pi/17)
options(digits = 3)
sqrt(pi/17)
load("E:/GITHUB/RProject/.RData")
options(prompt = 'leo>', continue = ">>")
?history
load("E:/GITHUB/RProject/.RData")
options(prompt = 'leo> ', continue = ">>")
find(mtcars)
find('mtcars')
find(skewness)
find(skeewness)
find(cos)
find('skewness')
find('skeewness')
find('cos')
apropos('mtcars')
apropos('mtc')
apropos('mt')
demo(persp)
demo(Hershey)
demo(plotmath)
apropos('mt')
library(help = spacial)
library(help = base)
objects(grep("base", search()))
fix(mtcars)
novo <- mtcars
fix(novo)
novo[1,]
par(ask=TRUE)
cut(mtcars$mpg, seq(10, 35, 5))
table(cut(mtcars$mpg, seq(10, 35, 5)))
barplot(table(cut(mtcars$mpg, seq(10, 35, 5))))
par(ask=TRUE)
barplot(table(dados))
barplot(as.integer(table(dados3)), names.arg = nivel)
cut(mtcars$mpg, seq(10, 35, 5))
table(cut(mtcars$mpg, seq(10, 35, 5)))
barplot(table(cut(mtcars$mpg, seq(10, 35, 5))))
?par
ls()
objects()
(.packages())
search()
log10(7)
log(7, base = 10)
cos(pi/2)
factorial(77)
choose(10, 3)
gamma(4.66)
lgamma(4.66)
exp(-Inf)
exp(-Inf)
0/Inf
0:3^Inf
(0:3)^Inf
Inf-Inf
Inf/Inf
vetorNA <- c(3, 2, -1, NA, 3, NA, NaN, 44, NA)
seq(along=vetorNA)[is.na(vetorNA)]
which(is.na(vetorNA))
vetorNA[is.na(vetorNA)] <- 0
vetorNA
ifelse(is.na(vetorNA), 0, vetorNA)
x <- 5 #(Atribuição)
x < -5 #(Comparação)
y <- 5
z <- y[-1]
length(z)
z
vetor <- scan()
vetor
load("C:/Users/Leandro Luz/Desktop/novo.RData")
.First()
.First <- function(){options(prompt = 'ch1> ')}
setwd("C:/Users/Leandro Luz/Desktop/R")
.First <- function(){options(prompt = 'ch1> ')}
setwd("C:/Users/Leandro Luz/Desktop/R")
save.image("C:/Users/Leandro Luz/Desktop/R/ch1.RData")
load("C:/Users/Leandro Luz/Desktop/R/ch1.RData")
setwd("C:/Users/Leandro Luz/Desktop/R")
load("C:/Users/Leandro Luz/Desktop/R/ch1.RData")
nova = function(string){
msg = paste("Mensagem", string, sep = ": ")
return(msg)
}
nova
nova()
print
nova
texto <- "Olá, mundo!"
texto
noquote(texto)
vetor1 <- c(4, 3, 1)
nomesvetor1 <- c("casas", "carros", "motos")
names(vetor1) <- nomesvetor1
vetor1
no.dimnames(vetor1)
no.dimnames(vetor1)
nodimnames(vetor1)
colunas = c("altura", "peso", "idade")
linhas = c("alberto", "francisco", "helder")
vetor =  c(1.78, 1.69, 1.88, 65, 70, 80, 17, 35, 44)
matriz <- matrix(vetor, nrow = 3, ncol = 3, byrow = FALSE, dimnames = list(linhas, colunas))
matriz
no.dimnames(matriz)
help.search('random')
find('mtcars')
help.search('random')
find('mtcars')
help.search('random')
help
cos
help.search(correlation)
help.search(variance)
seq(1, 0, length(100))
seq(1:10, by?
seq(1:10, by?
x <- c(1, '2', 3) ; y <- 5
x <- c(1, '2', 3) ; y <- 5
x + y
x <- c(1 : 1000, by = 2)
x
sum(x^2)
c(1:50, by = 5)
x <- c(4 < 5, 'a' < 'b')
x
4 == 4 & 5 == 5
5 != 5 | 6 == 6
5 == 5 | 6 != 6
x <- 5 & y <- 6
x <- 5 & y <- 6
x <- NA ; y <- 5 ; x == NA & y == 5
x==NA
x=='NA'
Inf*0
1-Inf
x <- c(TRUE, 'a')
mode(x)
x <- c(TRUE, 1)
mode(x)
x <- c('a', 1)
mode(x)
mode(letters)
as.logical(letters)
as.numeric(letters)
x <- 0:10
as.logical(x)
x <- c(TRUE, TRUE, FALSE) ; y <- c(0, 0, 0)
x & y
x && y
?runif
for i in 1:10{
for (i in 1:10){
valor <- runif(1, 0, 1)
x <- c(x, valor)
}
x
x <- c()
for (i in 1:10){
valor <- runif(1, 0, 1)
x <- c(x, valor)
}
x
func <- function(x){
return((sqrt(x)+1))
}
func(-1:10)
find(cor.test())
find('cor.test')
?cor.test
x <- runif(10)
y <- runif(10)
cor.test(x,y)
mtcars
tapply(mtcars, disp, mean)
tapply(mtcars, mtcars$disp, mean)
tapply(mtcars$disp, mtcars$gear, mean)
tapply(mtcars$wt, mtcars$gear, mean)
consumo <- c(13.10,15.20,16.10,14.75,15.35,16.20)
tapply(mtcars$gear, mtcars$hp, mean)
tapply(mtcars$gear, c(mtcars$wt, mtcars$hp), mean)
tapply(mtcars$gear, list(mtcars$wt, mtcars$hp), mean)
tapply(mtcars$gear, list(mtcars$gear, mtcars$carb), mean)
tapply(mtcars$gear, list(mtcars$hp, mtcars$gear), mean)
tapply(mtcars$gear, list(mtcars$gear, mtcars$carb), mean)
tapply(mtcars$gear, list(mtcars$gear, mtcars$carb, mtcars$cyl), mean)
tapply(mtcars$wt, mtcars$gear, mean)
?read.table()
scan()
scan()
library(Rcmdr)
install.packages("Rcmdr")
library(Rcmdr)
install.packages("Rcmdr", dependencies = TRUE)
library(Rcmdr, attach.required = TRUE)
install.packages("Rcmdr")
library(Rcmdr)
install.packages("RcmdrMisc")
library(Rcmdr)
install.packages(c("car", "caret", "cli", "covr", "dbplyr", "gtable", "hardhat", "haven", "hexbin", "hms", "htmltools", "interp", "parallelly", "pillar", "ps", "Rcpp", "rgl", "rlang", "rmarkdown", "sf", "terra", "tibble", "vctrs", "xfun", "XML"))
library("Rcmdr")
library("Rcmdr")
reticulate::repl_python()
help(print)
print(5, "patinhos foram passear")
print("Eu tenho", 5, "cachorros")
print("Eu tenho um total de", 5)
print("Nunca vou me esquecer.\nNunca mesmo!")
print(5, "patinhos foram passear")
print("Eu tenho", 5, "cachorros")
print("Eu tenho um total de", 5)
print("Nunca vou me esquecer.\nNunca mesmo!")
print("Estou assim", "furioso!", sep = ":")
print("Estou assim", "furioso!", sep = " : ")
print("Estou assim", "furioso!", sep = ": ")
help(print)
print("Última letra será apagada", end = "\b")
print("Última letra será apagada", end = "\b\b")
print("Última letra será apagada", end = "\b")
print("Última letra será apagada")
print("Última letra será apagada", end = "\b")
print("Última letra será apagada")
print("Última letra será apagada", file = "C:\\Users\\Leandro Luz\\Desktop\\impressao.txt")
print("Última letra será apagada", file = "C:\\Users\\Leandro Luz\\Desktop\\impressao.txt", flush = True)
import sys
print('GeeksForGeeks', file = sys.stderr)
library("ISwR")
plot.new()
library(Rcmdr)
library(Rcmdr)
plot.new()
library(Rcmdr)
plot.new()
library(Rcmdr)
plot.new()
library(Rcmdr)
plot.new(); library('Rcmdr')
help.start()
(x <- 15)
c
help("cos")
help(cos)
help("cos")
example(plot)
x <- seq(-3, 3, length = 101)
y <- dnorm(x) # assign standard normal values to y
plot(x, y, type = 'l') # 'l' stands for line
